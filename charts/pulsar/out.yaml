---
# Source: pulsar/charts/loki-stack/charts/fluent-bit/templates/podsecuritypolicy.yaml
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: zxc-fluent-bit-loki
  namespace: default
  labels:
    app: fluent-bit-loki
    chart: fluent-bit-0.1.1
    heritage: Helm
    release: zxc
spec:
  privileged: false
  allowPrivilegeEscalation: false
  volumes:
    - 'secret'
    - 'configMap'
    - 'hostPath'
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: 'RunAsAny'
  seLinux:
    rule: 'RunAsAny'
  supplementalGroups:
    rule: 'RunAsAny'
  fsGroup:
    rule: 'RunAsAny'
  readOnlyRootFilesystem: true
  requiredDropCapabilities:
    - ALL
---
# Source: pulsar/charts/loki-stack/charts/grafana/templates/podsecuritypolicy.yaml
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: zxc-grafana
  namespace: default
  labels:
    app: grafana
    chart: grafana-3.8.19
    heritage: Helm
    release: zxc
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: 'docker/default'
    seccomp.security.alpha.kubernetes.io/defaultProfileName:  'docker/default'
    apparmor.security.beta.kubernetes.io/allowedProfileNames: 'runtime/default'
    apparmor.security.beta.kubernetes.io/defaultProfileName:  'runtime/default'
spec:
  privileged: false
  allowPrivilegeEscalation: false
  requiredDropCapabilities:
    # Default set from Docker, without DAC_OVERRIDE or CHOWN
    - FOWNER
    - FSETID
    - KILL
    - SETGID
    - SETUID
    - SETPCAP
    - NET_BIND_SERVICE
    - NET_RAW
    - SYS_CHROOT
    - MKNOD
    - AUDIT_WRITE
    - SETFCAP
  volumes:
    - 'configMap'
    - 'emptyDir'
    - 'projected'
    - 'secret'
    - 'downwardAPI'
    - 'persistentVolumeClaim'
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: 'RunAsAny'
  seLinux:
    rule: 'RunAsAny'
  supplementalGroups:
    rule: 'RunAsAny'
  fsGroup:
    rule: 'RunAsAny'
  readOnlyRootFilesystem: false
---
# Source: pulsar/charts/loki-stack/charts/grafana/templates/tests/test-podsecuritypolicy.yaml
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: zxc-grafana-test
  namespace: default
  labels:
    app: grafana
    chart: grafana-3.8.19
    heritage: Helm
    release: zxc
spec:
  allowPrivilegeEscalation: true
  privileged: false
  hostNetwork: false
  hostIPC: false
  hostPID: false
  fsGroup:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  runAsUser:
    rule: RunAsAny
  volumes:
  - configMap
  - downwardAPI
  - emptyDir
  - projected
  - secret
---
# Source: pulsar/charts/loki-stack/charts/loki/templates/podsecuritypolicy.yaml
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: zxc-loki
  namespace: default
  labels:
    app: loki
    chart: loki-0.28.1
    heritage: Helm
    release: zxc
spec:
  privileged: false
  allowPrivilegeEscalation: false
  volumes:
    - 'configMap'
    - 'emptyDir'
    - 'persistentVolumeClaim'
    - 'secret'
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: 'MustRunAsNonRoot'
  seLinux:
    rule: 'RunAsAny'
  supplementalGroups:
    rule: 'MustRunAs'
    ranges:
    - min: 1
      max: 65535
  fsGroup:
    rule: 'MustRunAs'
    ranges:
    - min: 1
      max: 65535
  readOnlyRootFilesystem: true
  requiredDropCapabilities:
    - ALL
---
# Source: pulsar/charts/loki-stack/charts/promtail/templates/podsecuritypolicy.yaml
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: zxc-promtail
  namespace: default
  labels:
    app: promtail
    chart: promtail-0.22.1
    heritage: Helm
    release: zxc
spec:
  privileged: false
  allowPrivilegeEscalation: false
  volumes:
    - 'secret'
    - 'configMap'
    - 'hostPath'
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: 'RunAsAny'
  seLinux:
    rule: 'RunAsAny'
  supplementalGroups:
    rule: 'RunAsAny'
  fsGroup:
    rule: 'RunAsAny'
  readOnlyRootFilesystem: true
  requiredDropCapabilities:
    - ALL
---
# Source: pulsar/templates/bookkeeper/bookkeeper-pdb.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: "zxc-pulsar-bookie"
  namespace: default
  labels:
    app: pulsar
    chart: pulsar-2.8.4
    release: zxc
    heritage: Helm
    cluster: zxc-pulsar
    component: bookie
spec:
  selector:
    matchLabels:
      app: pulsar
      release: zxc
      component: bookie
  maxUnavailable: 1
---
# Source: pulsar/templates/broker/broker-pdb.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: "zxc-pulsar-broker"
  namespace: default
  labels:
    app: pulsar
    chart: pulsar-2.8.4
    release: zxc
    heritage: Helm
    cluster: zxc-pulsar
    component: broker
spec:
  selector:
    matchLabels:
      app: pulsar
      release: zxc
      component: broker
  maxUnavailable: 1
---
# Source: pulsar/templates/proxy/proxy-pdb.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: "zxc-pulsar-proxy"
  namespace: default
  labels:
    app: pulsar
    chart: pulsar-2.8.4
    release: zxc
    heritage: Helm
    cluster: zxc-pulsar
    component: proxy
spec:
  selector:
    matchLabels:
      app: pulsar
      release: zxc
      component: proxy
  maxUnavailable: 1
---
# Source: pulsar/templates/zookeeper/zookeeper-pdb.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

# deploy zookeeper only when `components.zookeeper` is true
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: "zxc-pulsar-zookeeper"
  namespace: default
  labels:
    app: pulsar
    chart: pulsar-2.8.4
    release: zxc
    heritage: Helm
    cluster: zxc-pulsar
    component: zookeeper
spec:
  selector:
    matchLabels:
      app: pulsar
      release: zxc
      component: zookeeper
  maxUnavailable: 1
---
# Source: pulsar/charts/loki-stack/charts/fluent-bit/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: fluent-bit-loki
    chart: fluent-bit-0.1.1
    heritage: Helm
    release: zxc
  name: zxc-fluent-bit-loki
  namespace: default
---
# Source: pulsar/charts/loki-stack/charts/grafana/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: grafana
    chart: grafana-3.8.19
    heritage: Helm
    release: zxc
  name: zxc-grafana
  namespace: default
---
# Source: pulsar/charts/loki-stack/charts/grafana/templates/tests/test-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: grafana
    chart: grafana-3.8.19
    heritage: Helm
    release: zxc
  name: zxc-grafana-test
  namespace: default
---
# Source: pulsar/charts/loki-stack/charts/loki/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: loki
    chart: loki-0.28.1
    heritage: Helm
    release: zxc
  annotations:
    {}
  name: zxc-loki
  namespace: default
---
# Source: pulsar/charts/loki-stack/charts/prometheus/templates/alertmanager-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    component: "alertmanager"
    app: prometheus
    release: zxc
    chart: prometheus-9.3.3
    heritage: Helm
  name: zxc-prometheus-alertmanager
---
# Source: pulsar/charts/loki-stack/charts/prometheus/templates/kube-state-metrics-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    component: "kube-state-metrics"
    app: prometheus
    release: zxc
    chart: prometheus-9.3.3
    heritage: Helm
  name: zxc-prometheus-kube-state-metrics
---
# Source: pulsar/charts/loki-stack/charts/prometheus/templates/node-exporter-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    component: "node-exporter"
    app: prometheus
    release: zxc
    chart: prometheus-9.3.3
    heritage: Helm
  name: zxc-prometheus-node-exporter
---
# Source: pulsar/charts/loki-stack/charts/prometheus/templates/pushgateway-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    component: "pushgateway"
    app: prometheus
    release: zxc
    chart: prometheus-9.3.3
    heritage: Helm
  name: zxc-prometheus-pushgateway
---
# Source: pulsar/charts/loki-stack/charts/prometheus/templates/server-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    component: "server"
    app: prometheus
    release: zxc
    chart: prometheus-9.3.3
    heritage: Helm
  name: zxc-prometheus-server
---
# Source: pulsar/charts/loki-stack/charts/promtail/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: promtail
    chart: promtail-0.22.1
    heritage: Helm
    release: zxc
  name: zxc-promtail
  namespace: default
---
# Source: pulsar/templates/bookkeeper/bookkeeper-service-account.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
apiVersion: v1
kind: ServiceAccount
metadata:
  name: zxc-pulsar-bookie-acct
  namespace: default
  labels:
    app: pulsar
    chart: pulsar-2.8.4
    release: zxc
    heritage: Helm
    cluster: zxc-pulsar
    component: bookie
  annotations:
---
# Source: pulsar/templates/broker/broker-service-account.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
apiVersion: v1
kind: ServiceAccount
metadata:
  name: zxc-pulsar-broker-acct
  namespace: default
  labels:
    app: pulsar
    chart: pulsar-2.8.4
    release: zxc
    heritage: Helm
    cluster: zxc-pulsar
    component: broker
  annotations:
---
# Source: pulsar/templates/proxy/proxy-service-account.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
apiVersion: v1
kind: ServiceAccount
metadata:
  name: zxc-pulsar-proxy-acct
  namespace: default
  labels:
    app: pulsar
    chart: pulsar-2.8.4
    release: zxc
    heritage: Helm
    cluster: zxc-pulsar
    component: proxy
  annotations:
---
# Source: pulsar/templates/zookeeper/zookeeper-backup-serviceaccount.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
apiVersion: v1
kind: ServiceAccount
metadata:
  name: zxc-pulsar-backup-acct
  namespace: default
  labels:
    app: pulsar
    chart: pulsar-2.8.4
    release: zxc
    heritage: Helm
    cluster: zxc-pulsar
    component: backup
  annotations:
---
# Source: pulsar/templates/zookeeper/zookeeper-restore-serviceaccount.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
apiVersion: v1
kind: ServiceAccount
metadata:
  name: zxc-pulsar-restore-acct
  namespace: default
  labels:
    app: pulsar
    chart: pulsar-2.8.4
    release: zxc
    heritage: Helm
    cluster: zxc-pulsar
    component: restore
  annotations:
---
# Source: pulsar/charts/loki-stack/charts/grafana/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: zxc-grafana
  namespace: default
  labels:
    app: grafana
    chart: grafana-3.8.19
    release: zxc
    heritage: Helm
type: Opaque
data:
  admin-user: "YWRtaW4="
  admin-password: "RWFZbVFiVFJUa05xOWtadUZTWWVYZWFDNzIwQ1dOeTM1cGNpbmE5MQ=="
  ldap-toml: ""
---
# Source: pulsar/charts/loki-stack/charts/loki/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: zxc-loki
  namespace: default
  labels:
    app: loki
    chart: loki-0.28.1
    release: zxc
    heritage: Helm
data:
  loki.yaml: YXV0aF9lbmFibGVkOiBmYWxzZQpjaHVua19zdG9yZV9jb25maWc6CiAgbWF4X2xvb2tfYmFja19wZXJpb2Q6IDAKaW5nZXN0ZXI6CiAgY2h1bmtfYmxvY2tfc2l6ZTogMjYyMTQ0CiAgY2h1bmtfaWRsZV9wZXJpb2Q6IDNtCiAgY2h1bmtfcmV0YWluX3BlcmlvZDogMW0KICBsaWZlY3ljbGVyOgogICAgcmluZzoKICAgICAga3ZzdG9yZToKICAgICAgICBzdG9yZTogaW5tZW1vcnkKICAgICAgcmVwbGljYXRpb25fZmFjdG9yOiAxCiAgbWF4X3RyYW5zZmVyX3JldHJpZXM6IDAKbGltaXRzX2NvbmZpZzoKICBlbmZvcmNlX21ldHJpY19uYW1lOiBmYWxzZQogIHJlamVjdF9vbGRfc2FtcGxlczogdHJ1ZQogIHJlamVjdF9vbGRfc2FtcGxlc19tYXhfYWdlOiAxNjhoCnNjaGVtYV9jb25maWc6CiAgY29uZmlnczoKICAtIGZyb206ICIyMDE4LTA0LTE1IgogICAgaW5kZXg6CiAgICAgIHBlcmlvZDogMTY4aAogICAgICBwcmVmaXg6IGluZGV4XwogICAgb2JqZWN0X3N0b3JlOiBmaWxlc3lzdGVtCiAgICBzY2hlbWE6IHY5CiAgICBzdG9yZTogYm9sdGRiCnNlcnZlcjoKICBodHRwX2xpc3Rlbl9wb3J0OiAzMTAwCnN0b3JhZ2VfY29uZmlnOgogIGJvbHRkYjoKICAgIGRpcmVjdG9yeTogL2RhdGEvbG9raS9pbmRleAogIGZpbGVzeXN0ZW06CiAgICBkaXJlY3Rvcnk6IC9kYXRhL2xva2kvY2h1bmtzCnRhYmxlX21hbmFnZXI6CiAgcmV0ZW50aW9uX2RlbGV0ZXNfZW5hYmxlZDogZmFsc2UKICByZXRlbnRpb25fcGVyaW9kOiAwcw==
---
# Source: pulsar/charts/superset/charts/postgresql/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: zxc-postgresql
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.2.0
    app.kubernetes.io/instance: zxc
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  postgresql-postgres-password: "Tm5CUlpHdW9FSw=="
  postgresql-password: "c3VwZXJzZXQ="
---
# Source: pulsar/charts/superset/templates/secret-env.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
apiVersion: v1
kind: Secret
metadata:
  name: zxc-superset-env
  labels:
    app: zxc-superset
    chart: superset-0.1.1
    release: "zxc"
    heritage: "Helm"
type: Opaque
stringData:
    REDIS_HOST: "zxc-superset-redis-headless"
    REDIS_PORT: "6379"
    DB_HOST: "zxc-superset-postgresql"
    DB_PORT: "5432"
    DB_USER: "superset"
    DB_PASS: "superset"
    DB_NAME: "superset"
---
# Source: pulsar/charts/superset/templates/secret-superset-config.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
apiVersion: v1
kind: Secret
metadata:
  name: zxc-superset-config
  labels:
    app: zxc-superset
    chart: superset-0.1.1
    release: "zxc"
    heritage: "Helm"
type: Opaque
stringData:
  superset_config.py: |
    
    import os
    from cachelib.redis import RedisCache
    
    def env(key, default=None):
        return os.getenv(key, default)
    
    MAPBOX_API_KEY = env('MAPBOX_API_KEY', '')
    CACHE_CONFIG = {
          'CACHE_TYPE': 'redis',
          'CACHE_DEFAULT_TIMEOUT': 300,
          'CACHE_KEY_PREFIX': 'superset_',
          'CACHE_REDIS_HOST': env('REDIS_HOST'),
          'CACHE_REDIS_PORT': env('REDIS_PORT'),
          'CACHE_REDIS_DB': 1,
          'CACHE_REDIS_URL': f"redis://{env('REDIS_HOST')}:{env('REDIS_PORT')}/1"
    }
    DATA_CACHE_CONFIG = CACHE_CONFIG
    
    SQLALCHEMY_DATABASE_URI = f"postgresql+psycopg2://{env('DB_USER')}:{env('DB_PASS')}@{env('DB_HOST')}:{env('DB_PORT')}/{env('DB_NAME')}"
    SQLALCHEMY_TRACK_MODIFICATIONS = True
    SECRET_KEY = env('SECRET_KEY', 'thisISaSECRET_1234')
    
    # Flask-WTF flag for CSRF
    WTF_CSRF_ENABLED = True
    # Add endpoints that need to be exempt from CSRF protection
    WTF_CSRF_EXEMPT_LIST = []
    # A CSRF token that expires in 1 year
    WTF_CSRF_TIME_LIMIT = 60 * 60 * 24 * 365
    class CeleryConfig(object):
      BROKER_URL = f"redis://{env('REDIS_HOST')}:{env('REDIS_PORT')}/0"
      CELERY_IMPORTS = ('superset.sql_lab', )
      CELERY_RESULT_BACKEND = f"redis://{env('REDIS_HOST')}:{env('REDIS_PORT')}/0"
      CELERY_ANNOTATIONS = {'tasks.add': {'rate_limit': '10/s'}}
    
    CELERY_CONFIG = CeleryConfig
    RESULTS_BACKEND = RedisCache(
          host=env('REDIS_HOST'),
          port=env('REDIS_PORT'),
          key_prefix='superset_results'
    )
    
    
  superset_init.sh: |
    #!/bin/sh
    echo "Upgrading DB schema..."
    superset db upgrade
    echo "Initializing roles..."
    superset init
    echo "Creating admin user..."
    superset fab create-admin \
                    --username admin \
                    --firstname Superset \
                    --lastname Admin \
                    --email admin@superset.com \
                    --password admin \
                    || true
    
  superset_bootstrap.sh: |
    #!/bin/bash
    apt-get update -y &&\
     apt-get install -y --no-install-recommends nano &&\
     rm -rf /var/lib/apt/lists/*
    pip install psycopg2==2.8.5 redis==3.2.1
    if [ ! -f ~/bootstrap ]; then echo "Running Superset with uid 0" > ~/bootstrap; fi
---
# Source: pulsar/charts/loki-stack/charts/fluent-bit/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: zxc-fluent-bit-loki
  namespace: default
  labels:
    app: fluent-bit-loki
    chart: fluent-bit-0.1.1
    release: zxc
    heritage: Helm
data:
  fluent-bit.conf: |-
    [SERVICE]
        HTTP_Server    On
        HTTP_Listen    0.0.0.0
        HTTP_PORT      2020
        Flush          1
        Daemon         Off
        Log_Level      warn
        Parsers_File   parsers.conf
    [INPUT]
        Name           tail
        Tag            kube.*
        Path           /var/log/containers/*.log
        Parser         docker
        DB             /run/fluent-bit/flb_kube.db
        Mem_Buf_Limit  5MB
    [FILTER]
        Name           kubernetes
        Match          kube.*
        Kube_URL       https://kubernetes.default.svc:443
        Merge_Log On
        K8S-Logging.Parser Off
    [Output]
        Name loki
        Match *
        Url http://zxc-loki:3100/api/prom/push
        Labels {job="fluent-bit"}
        RemoveKeys kubernetes,stream
        LabelMapPath /fluent-bit/etc/labelmap.json
        LineFormat json
        LogLevel warn

  parsers.conf: |-
    [PARSER]
        Name        docker
        Format      json
        Time_Key    time
        Time_Format %Y-%m-%dT%H:%M:%S.%L

  labelmap.json: |-
    {
      "kubernetes": {
        "container_name": "container",
        "host": "node",
        "labels": {
          "app": "app",
          "release": "release"
        },
        "namespace_name": "namespace",
        "pod_name": "instance"
      },
      "stream": "stream"
    }
---
# Source: pulsar/charts/loki-stack/charts/grafana/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: zxc-grafana
  namespace: default
  labels:
    app: grafana
    chart: grafana-3.8.19
    release: zxc
    heritage: Helm
data:
  grafana.ini: |
    [analytics]
    check_for_updates = true
    [grafana_net]
    url = https://grafana.net
    [log]
    mode = console
    [paths]
    data = /var/lib/grafana/data
    logs = /var/log/grafana
    plugins = /var/lib/grafana/plugins
    provisioning = /etc/grafana/provisioning
---
# Source: pulsar/charts/loki-stack/charts/grafana/templates/tests/test-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: zxc-grafana-test
  namespace: default
  labels:
    app: zxc-grafana
    chart: "grafana-3.8.19"
    heritage: "Helm"
    release: "zxc"
data:
  run.sh: |-
    @test "Test Health" {
      url="http://zxc-grafana/api/health"

      code=$(curl -s -o /dev/null -I -w "%{http_code}" $url)
      [ "$code" == "200" ]
    }
---
# Source: pulsar/charts/loki-stack/charts/prometheus/templates/alertmanager-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    component: "alertmanager"
    app: prometheus
    release: zxc
    chart: prometheus-9.3.3
    heritage: Helm
  name: zxc-prometheus-alertmanager
data:
  alertmanager.yml: |
    global: {}
    receivers:
    - name: default-receiver
    route:
      group_interval: 5m
      group_wait: 10s
      receiver: default-receiver
      repeat_interval: 3h
---
# Source: pulsar/charts/loki-stack/charts/prometheus/templates/server-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    component: "server"
    app: prometheus
    release: zxc
    chart: prometheus-9.3.3
    heritage: Helm
  name: zxc-prometheus-server
data:
  alerts: |
    {}
  prometheus.yml: |
    global:
      evaluation_interval: 1m
      scrape_interval: 1m
      scrape_timeout: 10s
    rule_files:
    - /etc/config/rules
    - /etc/config/alerts
    scrape_configs:
    - job_name: prometheus
      static_configs:
      - targets:
        - localhost:9090
    - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      job_name: kubernetes-apiservers
      kubernetes_sd_configs:
      - role: endpoints
      relabel_configs:
      - action: keep
        regex: default;kubernetes;https
        source_labels:
        - __meta_kubernetes_namespace
        - __meta_kubernetes_service_name
        - __meta_kubernetes_endpoint_port_name
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: true
    - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      job_name: kubernetes-nodes
      kubernetes_sd_configs:
      - role: node
      relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - replacement: kubernetes.default.svc:443
        target_label: __address__
      - regex: (.+)
        replacement: /api/v1/nodes/$1/proxy/metrics
        source_labels:
        - __meta_kubernetes_node_name
        target_label: __metrics_path__
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: true
    - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      job_name: kubernetes-nodes-cadvisor
      kubernetes_sd_configs:
      - role: node
      relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - replacement: kubernetes.default.svc:443
        target_label: __address__
      - regex: (.+)
        replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor
        source_labels:
        - __meta_kubernetes_node_name
        target_label: __metrics_path__
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: true
    - job_name: kubernetes-service-endpoints
      kubernetes_sd_configs:
      - role: endpoints
      relabel_configs:
      - action: keep
        regex: true
        source_labels:
        - __meta_kubernetes_service_annotation_prometheus_io_scrape
      - action: replace
        regex: (https?)
        source_labels:
        - __meta_kubernetes_service_annotation_prometheus_io_scheme
        target_label: __scheme__
      - action: replace
        regex: (.+)
        source_labels:
        - __meta_kubernetes_service_annotation_prometheus_io_path
        target_label: __metrics_path__
      - action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        source_labels:
        - __address__
        - __meta_kubernetes_service_annotation_prometheus_io_port
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - action: replace
        source_labels:
        - __meta_kubernetes_namespace
        target_label: kubernetes_namespace
      - action: replace
        source_labels:
        - __meta_kubernetes_service_name
        target_label: kubernetes_name
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_node_name
        target_label: kubernetes_node
    - honor_labels: true
      job_name: prometheus-pushgateway
      kubernetes_sd_configs:
      - role: service
      relabel_configs:
      - action: keep
        regex: pushgateway
        source_labels:
        - __meta_kubernetes_service_annotation_prometheus_io_probe
    - job_name: kubernetes-services
      kubernetes_sd_configs:
      - role: service
      metrics_path: /probe
      params:
        module:
        - http_2xx
      relabel_configs:
      - action: keep
        regex: true
        source_labels:
        - __meta_kubernetes_service_annotation_prometheus_io_probe
      - source_labels:
        - __address__
        target_label: __param_target
      - replacement: blackbox
        target_label: __address__
      - source_labels:
        - __param_target
        target_label: instance
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - source_labels:
        - __meta_kubernetes_namespace
        target_label: kubernetes_namespace
      - source_labels:
        - __meta_kubernetes_service_name
        target_label: kubernetes_name
    - job_name: kubernetes-pods
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - action: keep
        regex: true
        source_labels:
        - __meta_kubernetes_pod_annotation_prometheus_io_scrape
      - action: replace
        regex: (.+)
        source_labels:
        - __meta_kubernetes_pod_annotation_prometheus_io_path
        target_label: __metrics_path__
      - action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        source_labels:
        - __address__
        - __meta_kubernetes_pod_annotation_prometheus_io_port
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - action: replace
        source_labels:
        - __meta_kubernetes_namespace
        target_label: kubernetes_namespace
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_name
        target_label: kubernetes_pod_name
    alerting:
      alertmanagers:
      - kubernetes_sd_configs:
          - role: pod
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
        - source_labels: [__meta_kubernetes_namespace]
          regex: default
          action: keep
        - source_labels: [__meta_kubernetes_pod_label_app]
          regex: prometheus
          action: keep
        - source_labels: [__meta_kubernetes_pod_label_component]
          regex: alertmanager
          action: keep
        - source_labels: [__meta_kubernetes_pod_container_port_number]
          regex:
          action: drop
  rules: |
    {}
---
# Source: pulsar/charts/loki-stack/charts/promtail/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: zxc-promtail
  namespace: default
  labels:
    app: promtail
    chart: promtail-0.22.1
    release: zxc
    heritage: Helm
data:
  promtail.yaml: |
    client:
      backoff_config:
        maxbackoff: 5s
        maxretries: 20
        minbackoff: 100ms
      batchsize: 102400
      batchwait: 1s
      external_labels: {}
      timeout: 10s
    positions:
      filename: /run/promtail/positions.yaml
    server:
      http_listen_port: 3101
    target_config:
      sync_period: 10s
    scrape_configs:
    - job_name: kubernetes-pods-name
      pipeline_stages:
        - docker: {}
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - source_labels:
        - __meta_kubernetes_pod_label_name
        target_label: __service__
      - source_labels:
        - __meta_kubernetes_pod_node_name
        target_label: __host__
      - action: drop
        regex: ''
        source_labels:
        - __service__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - action: replace
        replacement: $1
        separator: /
        source_labels:
        - __meta_kubernetes_namespace
        - __service__
        target_label: job
      - action: replace
        source_labels:
        - __meta_kubernetes_namespace
        target_label: namespace
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_name
        target_label: instance
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_container_name
        target_label: container_name
      - replacement: /var/log/pods/*$1/*.log
        separator: /
        source_labels:
        - __meta_kubernetes_pod_uid
        - __meta_kubernetes_pod_container_name
        target_label: __path__
    - job_name: kubernetes-pods-app
      pipeline_stages:
        - docker: {}
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - action: drop
        regex: .+
        source_labels:
        - __meta_kubernetes_pod_label_name
      - source_labels:
        - __meta_kubernetes_pod_label_app
        target_label: __service__
      - source_labels:
        - __meta_kubernetes_pod_node_name
        target_label: __host__
      - action: drop
        regex: ''
        source_labels:
        - __service__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - action: replace
        replacement: $1
        separator: /
        source_labels:
        - __meta_kubernetes_namespace
        - __service__
        target_label: job
      - action: replace
        source_labels:
        - __meta_kubernetes_namespace
        target_label: namespace
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_name
        target_label: instance
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_container_name
        target_label: container_name
      - replacement: /var/log/pods/*$1/*.log
        separator: /
        source_labels:
        - __meta_kubernetes_pod_uid
        - __meta_kubernetes_pod_container_name
        target_label: __path__
    - job_name: kubernetes-pods-direct-controllers
      pipeline_stages:
        - docker: {}
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - action: drop
        regex: .+
        separator: ''
        source_labels:
        - __meta_kubernetes_pod_label_name
        - __meta_kubernetes_pod_label_app
      - action: drop
        regex: '[0-9a-z-.]+-[0-9a-f]{8,10}'
        source_labels:
        - __meta_kubernetes_pod_controller_name
      - source_labels:
        - __meta_kubernetes_pod_controller_name
        target_label: __service__
      - source_labels:
        - __meta_kubernetes_pod_node_name
        target_label: __host__
      - action: drop
        regex: ''
        source_labels:
        - __service__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - action: replace
        replacement: $1
        separator: /
        source_labels:
        - __meta_kubernetes_namespace
        - __service__
        target_label: job
      - action: replace
        source_labels:
        - __meta_kubernetes_namespace
        target_label: namespace
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_name
        target_label: instance
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_container_name
        target_label: container_name
      - replacement: /var/log/pods/*$1/*.log
        separator: /
        source_labels:
        - __meta_kubernetes_pod_uid
        - __meta_kubernetes_pod_container_name
        target_label: __path__
    - job_name: kubernetes-pods-indirect-controller
      pipeline_stages:
        - docker: {}
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - action: drop
        regex: .+
        separator: ''
        source_labels:
        - __meta_kubernetes_pod_label_name
        - __meta_kubernetes_pod_label_app
      - action: keep
        regex: '[0-9a-z-.]+-[0-9a-f]{8,10}'
        source_labels:
        - __meta_kubernetes_pod_controller_name
      - action: replace
        regex: '([0-9a-z-.]+)-[0-9a-f]{8,10}'
        source_labels:
        - __meta_kubernetes_pod_controller_name
        target_label: __service__
      - source_labels:
        - __meta_kubernetes_pod_node_name
        target_label: __host__
      - action: drop
        regex: ''
        source_labels:
        - __service__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - action: replace
        replacement: $1
        separator: /
        source_labels:
        - __meta_kubernetes_namespace
        - __service__
        target_label: job
      - action: replace
        source_labels:
        - __meta_kubernetes_namespace
        target_label: namespace
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_name
        target_label: instance
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_container_name
        target_label: container_name
      - replacement: /var/log/pods/*$1/*.log
        separator: /
        source_labels:
        - __meta_kubernetes_pod_uid
        - __meta_kubernetes_pod_container_name
        target_label: __path__
    - job_name: kubernetes-pods-static
      pipeline_stages:
        - docker: {}
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - action: drop
        regex: ''
        source_labels:
        - __meta_kubernetes_pod_annotation_kubernetes_io_config_mirror
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_label_component
        target_label: __service__
      - source_labels:
        - __meta_kubernetes_pod_node_name
        target_label: __host__
      - action: drop
        regex: ''
        source_labels:
        - __service__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - action: replace
        replacement: $1
        separator: /
        source_labels:
        - __meta_kubernetes_namespace
        - __service__
        target_label: job
      - action: replace
        source_labels:
        - __meta_kubernetes_namespace
        target_label: namespace
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_name
        target_label: instance
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_container_name
        target_label: container_name
      - replacement: /var/log/pods/*$1/*.log
        separator: /
        source_labels:
        - __meta_kubernetes_pod_annotation_kubernetes_io_config_mirror
        - __meta_kubernetes_pod_container_name
        target_label: __path__
---
# Source: pulsar/charts/loki-stack/templates/datasources.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: zxc-loki-stack
  namespace: default
  labels:
    app: loki-stack
    chart: loki-stack-0.36.1
    release: zxc
    heritage: Helm
    grafana_datasource: "1"
data:
  loki-stack-datasource.yaml: |-
    apiVersion: 1
    datasources:
    - name: Loki
      type: loki
      access: proxy
      url: http://zxc-loki:3100
      version: 1
---
# Source: pulsar/charts/loki-stack/templates/tests/loki-test-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: zxc-loki-stack-test
  labels:
    app: loki-stack
    chart: loki-stack-0.36.1
    release: zxc
    heritage: Helm
data:
  test.sh: |
    #!/usr/bin/env bash

    LOKI_URI="http://${LOKI_SERVICE}:${LOKI_PORT}"

    function setup() {
      apk add -u curl jq
      until (curl -s ${LOKI_URI}/api/prom/label/app/values | jq -e '.values[] | select(. == "loki")'); do
        sleep 1
      done
    }

    @test "Has labels" {
      curl -s ${LOKI_URI}/api/prom/label | \
      jq -e '.values[] | select(. == "app")'
    }

    @test "Query log entry" {
      curl -sG ${LOKI_URI}/api/prom/query?limit=10 --data-urlencode 'query={app="loki"}' | \
      jq -e '.streams[].entries | length >= 1'
    }

    @test "Push log entry legacy" {
      local timestamp=$(date -Iseconds -u | sed 's/UTC/.000000000+00:00/')
      local data=$(jq -n --arg timestamp "${timestamp}" '{"streams": [{"labels": "{app=\"loki-test\"}", "entries": [{"ts": $timestamp, "line": "foobar"}]}]}')

      curl -s -X POST -H "Content-Type: application/json" ${LOKI_URI}/api/prom/push -d "${data}"

      curl -sG ${LOKI_URI}/api/prom/query?limit=1 --data-urlencode 'query={app="loki-test"}' | \
      jq -e '.streams[].entries[].line == "foobar"'
    }

    @test "Push log entry" {
      local timestamp=$(date +%s000000000)
      local data=$(jq -n --arg timestamp "${timestamp}" '{"streams": [{"stream": {"app": "loki-test"}, "values": [[$timestamp, "foobar"]]}]}')

      curl -s -X POST -H "Content-Type: application/json" ${LOKI_URI}/loki/api/v1/push -d "${data}"

      curl -sG ${LOKI_URI}/api/prom/query?limit=1 --data-urlencode 'query={app="loki-test"}' | \
      jq -e '.streams[].entries[].line == "foobar"'
    }
---
# Source: pulsar/charts/superset/charts/redis/templates/configmap-scripts.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: zxc-redis-scripts
  namespace: "default"
  labels:
    app: redis
    chart: redis-12.3.0
    heritage: Helm
    release: zxc
data:
  start-master.sh: |
    #!/bin/bash
    useradd redis
    chown -R redis /data
    if [[ -n $REDIS_PASSWORD_FILE ]]; then
      password_aux=`cat ${REDIS_PASSWORD_FILE}`
      export REDIS_PASSWORD=$password_aux
    fi
    if [[ ! -f /opt/bitnami/redis/etc/master.conf ]];then
      cp /opt/bitnami/redis/mounted-etc/master.conf /opt/bitnami/redis/etc/master.conf
    fi
    if [[ ! -f /opt/bitnami/redis/etc/redis.conf ]];then
      cp /opt/bitnami/redis/mounted-etc/redis.conf /opt/bitnami/redis/etc/redis.conf
    fi
    ARGS=("--port" "${REDIS_PORT}")
    ARGS+=("--protected-mode" "no")
    ARGS+=("--include" "/opt/bitnami/redis/etc/redis.conf")
    ARGS+=("--include" "/opt/bitnami/redis/etc/master.conf")
    exec /run.sh "${ARGS[@]}"
---
# Source: pulsar/charts/superset/charts/redis/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: zxc-redis
  namespace: "default"
  labels:
    app: redis
    chart: redis-12.3.0
    heritage: Helm
    release: zxc
data:
  redis.conf: |-
    # User-supplied configuration:
    # Enable AOF https://redis.io/topics/persistence#append-only-file
    appendonly yes
    # Disable RDB persistence, AOF persistence already enabled.
    save ""
  master.conf: |-
    dir /data
    rename-command FLUSHDB ""
    rename-command FLUSHALL ""
  replica.conf: |-
    dir /data
    slave-read-only yes
    rename-command FLUSHDB ""
    rename-command FLUSHALL ""
---
# Source: pulsar/charts/superset/charts/redis/templates/health-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: zxc-redis-health
  namespace: "default"
  labels:
    app: redis
    chart: redis-12.3.0
    heritage: Helm
    release: zxc
data:
  ping_readiness_local.sh: |-
    #!/bin/bash
    export REDISCLI_AUTH="$REDIS_PASSWORD"
    response=$(
      timeout -s 3 $1 \
      redis-cli \
        -h localhost \
        -p $REDIS_PORT \
        ping
    )
    if [ "$response" != "PONG" ]; then
      echo "$response"
      exit 1
    fi
  ping_liveness_local.sh: |-
    #!/bin/bash
    export REDISCLI_AUTH="$REDIS_PASSWORD"
    response=$(
      timeout -s 3 $1 \
      redis-cli \
        -h localhost \
        -p $REDIS_PORT \
        ping
    )
    if [ "$response" != "PONG" ] && [ "$response" != "LOADING Redis is loading the dataset in memory" ]; then
      echo "$response"
      exit 1
    fi
  ping_readiness_master.sh: |-
    #!/bin/bash
    export REDISCLI_AUTH="$REDIS_MASTER_PASSWORD"
    response=$(
      timeout -s 3 $1 \
      redis-cli \
        -h $REDIS_MASTER_HOST \
        -p $REDIS_MASTER_PORT_NUMBER \
        ping
    )
    if [ "$response" != "PONG" ]; then
      echo "$response"
      exit 1
    fi
  ping_liveness_master.sh: |-
    #!/bin/bash
    export REDISCLI_AUTH="$REDIS_MASTER_PASSWORD"
    response=$(
      timeout -s 3 $1 \
      redis-cli \
        -h $REDIS_MASTER_HOST \
        -p $REDIS_MASTER_PORT_NUMBER \
        ping
    )
    if [ "$response" != "PONG" ] && [ "$response" != "LOADING Redis is loading the dataset in memory" ]; then
      echo "$response"
      exit 1
    fi
  ping_readiness_local_and_master.sh: |-
    script_dir="$(dirname "$0")"
    exit_status=0
    "$script_dir/ping_readiness_local.sh" $1 || exit_status=$?
    "$script_dir/ping_readiness_master.sh" $1 || exit_status=$?
    exit $exit_status
  ping_liveness_local_and_master.sh: |-
    script_dir="$(dirname "$0")"
    exit_status=0
    "$script_dir/ping_liveness_local.sh" $1 || exit_status=$?
    "$script_dir/ping_liveness_master.sh" $1 || exit_status=$?
    exit $exit_status
---
# Source: pulsar/templates/bookkeeper/bookkeeper-autorecovery-configmap.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
apiVersion: v1
kind: ConfigMap
metadata:
  name: "zxc-pulsar-recovery"
  namespace: default
  labels:
    app: pulsar
    chart: pulsar-2.8.4
    release: zxc
    heritage: Helm
    cluster: zxc-pulsar
    component: recovery
data:
  # common config
  zkServers: "zxc-pulsar-zookeeper:2281"
  zkLedgersRootPath: "/ledgers"
  # enable bookkeeper http server
  httpServerEnabled: "true"
  httpServerPort: "8000"
  # config the stats provider
  statsProviderClass: org.apache.bookkeeper.stats.prometheus.PrometheusMetricsProvider
  # use hostname as the bookie id
  useHostNameAsBookieID: "true"
  BOOKIE_MEM: |
    -Xms64m -Xmx64m
  log4j2.yaml: |
    #
    # Licensed to the Apache Software Foundation (ASF) under one
    # or more contributor license agreements.  See the NOTICE file
    # distributed with this work for additional information
    # regarding copyright ownership.  The ASF licenses this file
    # to you under the Apache License, Version 2.0 (the
    # "License"); you may not use this file except in compliance
    # with the License.  You may obtain a copy of the License at
    #
    #   http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing,
    # software distributed under the License is distributed on an
    # "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    # KIND, either express or implied.  See the License for the
    # specific language governing permissions and limitations
    # under the License.
    #
  
  
    Configuration:
      status: INFO
      monitorInterval: 30
      name: pulsar
      packages: io.prometheus.client.log4j2
  
      Properties:
        Property:
          - name: "pulsar.log.dir"
            value: "logs"
          - name: "pulsar.log.file"
            value: "pulsar.log"
          - name: "pulsar.log.appender"
            value: "RoutingAppender"
          - name: "pulsar.log.root.level"
            value: "info"
          - name: "pulsar.log.level"
            value: "info"
          - name: "pulsar.routing.appender.default"
            value: "Console"
  
      # Example: logger-filter script
      Scripts:
        ScriptFile:
          name: filter.js
          language: JavaScript
          path: ./conf/log4j2-scripts/filter.js
          charset: UTF-8
  
      Appenders:
  
        # Console
        Console:
          name: Console
          target: SYSTEM_OUT
          PatternLayout:
            Pattern: "%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n"
  
        # Rolling file appender configuration
        RollingFile:
          name: RollingFile
          fileName: "${sys:pulsar.log.dir}/${sys:pulsar.log.file}"
          filePattern: "${sys:pulsar.log.dir}/${sys:pulsar.log.file}-%d{MM-dd-yyyy}-%i.log.gz"
          immediateFlush: false
          PatternLayout:
            Pattern: "%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n"
          Policies:
            TimeBasedTriggeringPolicy:
              interval: 1
              modulate: true
            SizeBasedTriggeringPolicy:
              size: 1 GB
          # Delete file older than 30days
          DefaultRolloverStrategy:
              Delete:
                basePath: ${sys:pulsar.log.dir}
                maxDepth: 2
                IfFileName:
                  glob: "*/${sys:pulsar.log.file}*log.gz"
                IfLastModified:
                  age: 30d
  
        Prometheus:
          name: Prometheus
  
        # Routing
        Routing:
          name: RoutingAppender
          Routes:
            pattern: "$${ctx:function}"
            Route:
              -
                Routing:
                  name: InstanceRoutingAppender
                  Routes:
                    pattern: "$${ctx:instance}"
                    Route:
                      -
                        RollingFile:
                          name: "Rolling-${ctx:function}"
                          fileName : "${sys:pulsar.log.dir}/functions/${ctx:function}/${ctx:functionname}-${ctx:instance}.log"
                          filePattern : "${sys:pulsar.log.dir}/functions/${sys:pulsar.log.file}-${ctx:instance}-%d{MM-dd-yyyy}-%i.log.gz"
                          PatternLayout:
                            Pattern: "%d{ABSOLUTE} %level{length=5} [%thread] [instance: %X{instance}] %logger{1} - %msg%n"
                          Policies:
                            TimeBasedTriggeringPolicy:
                              interval: 1
                              modulate: true
                            SizeBasedTriggeringPolicy:
                              size: "20MB"
                            # Trigger every day at midnight that also scan
                            # roll-over strategy that deletes older file
                            CronTriggeringPolicy:
                              schedule: "0 0 0 * * ?"
                          # Delete file older than 30days
                          DefaultRolloverStrategy:
                              Delete:
                                basePath: ${sys:pulsar.log.dir}
                                maxDepth: 2
                                IfFileName:
                                  glob: "*/${sys:pulsar.log.file}*log.gz"
                                IfLastModified:
                                  age: 30d
                      - ref: "${sys:pulsar.routing.appender.default}"
                        key: "${ctx:function}"
              - ref: "${sys:pulsar.routing.appender.default}"
                key: "${ctx:function}"
  
      Loggers:
  
        # Default root logger configuration
        Root:
          level: "${sys:pulsar.log.root.level}"
          additivity: true
          AppenderRef:
            - ref: "${sys:pulsar.log.appender}"
              level: "${sys:pulsar.log.level}"
            - ref: Prometheus
              level: info
  
        Logger:
          - name: org.apache.bookkeeper.bookie.BookieShell
            level: info
            additivity: false
            AppenderRef:
              - ref: Console
  
          - name: verbose
            level: info
            additivity: false
            AppenderRef:
              - ref: Console
  
        # Logger to inject filter script
    #     - name: org.apache.bookkeeper.mledger.impl.ManagedLedgerImpl
    #       level: debug
    #       additivity: false
    #       AppenderRef:
    #         ref: "${sys:pulsar.log.appender}"
    #         ScriptFilter:
    #           onMatch: ACCEPT
    #           onMisMatch: DENY
    #           ScriptRef:
    #             ref: filter.js
---
# Source: pulsar/templates/bookkeeper/bookkeeper-configmap.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
apiVersion: v1
kind: ConfigMap
metadata:
  name: "zxc-pulsar-bookie"
  namespace: default
  labels:
    app: pulsar
    chart: pulsar-2.8.4
    release: zxc
    heritage: Helm
    cluster: zxc-pulsar
    component: bookie
data:
  # common config
  zkServers: "zxc-pulsar-zookeeper:2281"
  zkLedgersRootPath: "/ledgers"
  # enable bookkeeper http server
  httpServerEnabled: "true"
  httpServerPort: "8000"
  # config the stats provider
  statsProviderClass: org.apache.bookkeeper.stats.prometheus.PrometheusMetricsProvider
  # use hostname as the bookie id
  useHostNameAsBookieID: "true"
  # disable auto recovery on bookies since we will start AutoRecovery in separated pods
  autoRecoveryDaemonEnabled: "false"
  # Do not retain journal files as it increase the disk utilization
  journalMaxBackups: "0"
  journalDirectories: "/pulsar/data/bookkeeper/journal"
  PULSAR_PREFIX_journalDirectories: "/pulsar/data/bookkeeper/journal"
  ledgerDirectories: "/pulsar/data/bookkeeper/ledgers"
  # TLS config
  
  PULSAR_PREFIX_tlsProviderFactoryClass: org.apache.bookkeeper.tls.TLSContextFactory
  PULSAR_PREFIX_tlsCertificatePath: /pulsar/certs/bookie/tls.crt
  PULSAR_PREFIX_tlsKeyStoreType: PEM
  PULSAR_PREFIX_tlsKeyStore: /pulsar/certs/bookie/tls.key
  PULSAR_PREFIX_tlsTrustStoreType: PEM
  PULSAR_PREFIX_tlsTrustStore: /pulsar/certs/ca/ca.crt
  BOOKIE_MEM: |
    -Xms128m -Xmx256m -XX:MaxDirectMemorySize=256m
  PULSAR_GC: |
    -XX:+UseG1GC -XX:MaxGCPauseMillis=10 -XX:+ParallelRefProcEnabled -XX:+UnlockExperimentalVMOptions -XX:+AggressiveOpts -XX:+DoEscapeAnalysis -XX:ParallelGCThreads=4 -XX:ConcGCThreads=4 -XX:G1NewSizePercent=50 -XX:+DisableExplicitGC -XX:-ResizePLAB -XX:+ExitOnOutOfMemoryError -XX:+PerfDisableSharedMem -verbosegc
  PULSAR_MEM: |
    -Xms128m -Xmx256m -XX:MaxDirectMemorySize=256m
  # Include log configuration file, If you want to configure the log level and other configuration
  # items, you can modify the configmap, and eventually it will overwrite the log4j2.yaml file under conf
  log4j2.yaml: |
    #
    # Licensed to the Apache Software Foundation (ASF) under one
    # or more contributor license agreements.  See the NOTICE file
    # distributed with this work for additional information
    # regarding copyright ownership.  The ASF licenses this file
    # to you under the Apache License, Version 2.0 (the
    # "License"); you may not use this file except in compliance
    # with the License.  You may obtain a copy of the License at
    #
    #   http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing,
    # software distributed under the License is distributed on an
    # "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    # KIND, either express or implied.  See the License for the
    # specific language governing permissions and limitations
    # under the License.
    #
  
  
    Configuration:
      status: INFO
      monitorInterval: 30
      name: pulsar
      packages: io.prometheus.client.log4j2
  
      Properties:
        Property:
          - name: "pulsar.log.dir"
            value: "logs"
          - name: "pulsar.log.file"
            value: "pulsar.log"
          - name: "pulsar.log.appender"
            value: "RoutingAppender"
          - name: "pulsar.log.root.level"
            value: "info"
          - name: "pulsar.log.level"
            value: "info"
          - name: "pulsar.routing.appender.default"
            value: "Console"
  
      # Example: logger-filter script
      Scripts:
        ScriptFile:
          name: filter.js
          language: JavaScript
          path: ./conf/log4j2-scripts/filter.js
          charset: UTF-8
  
      Appenders:
  
        # Console
        Console:
          name: Console
          target: SYSTEM_OUT
          PatternLayout:
            Pattern: "%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n"
  
        # Rolling file appender configuration
        RollingFile:
          name: RollingFile
          fileName: "${sys:pulsar.log.dir}/${sys:pulsar.log.file}"
          filePattern: "${sys:pulsar.log.dir}/${sys:pulsar.log.file}-%d{MM-dd-yyyy}-%i.log.gz"
          immediateFlush: false
          PatternLayout:
            Pattern: "%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n"
          Policies:
            TimeBasedTriggeringPolicy:
              interval: 1
              modulate: true
            SizeBasedTriggeringPolicy:
              size: 1 GB
          # Delete file older than 30days
          DefaultRolloverStrategy:
              Delete:
                basePath: ${sys:pulsar.log.dir}
                maxDepth: 2
                IfFileName:
                  glob: "*/${sys:pulsar.log.file}*log.gz"
                IfLastModified:
                  age: 30d
  
        Prometheus:
          name: Prometheus
  
        # Routing
        Routing:
          name: RoutingAppender
          Routes:
            pattern: "$${ctx:function}"
            Route:
              -
                Routing:
                  name: InstanceRoutingAppender
                  Routes:
                    pattern: "$${ctx:instance}"
                    Route:
                      -
                        RollingFile:
                          name: "Rolling-${ctx:function}"
                          fileName : "${sys:pulsar.log.dir}/functions/${ctx:function}/${ctx:functionname}-${ctx:instance}.log"
                          filePattern : "${sys:pulsar.log.dir}/functions/${sys:pulsar.log.file}-${ctx:instance}-%d{MM-dd-yyyy}-%i.log.gz"
                          PatternLayout:
                            Pattern: "%d{ABSOLUTE} %level{length=5} [%thread] [instance: %X{instance}] %logger{1} - %msg%n"
                          Policies:
                            TimeBasedTriggeringPolicy:
                              interval: 1
                              modulate: true
                            SizeBasedTriggeringPolicy:
                              size: "20MB"
                            # Trigger every day at midnight that also scan
                            # roll-over strategy that deletes older file
                            CronTriggeringPolicy:
                              schedule: "0 0 0 * * ?"
                          # Delete file older than 30days
                          DefaultRolloverStrategy:
                              Delete:
                                basePath: ${sys:pulsar.log.dir}
                                maxDepth: 2
                                IfFileName:
                                  glob: "*/${sys:pulsar.log.file}*log.gz"
                                IfLastModified:
                                  age: 30d
                      - ref: "${sys:pulsar.routing.appender.default}"
                        key: "${ctx:function}"
              - ref: "${sys:pulsar.routing.appender.default}"
                key: "${ctx:function}"
  
      Loggers:
  
        # Default root logger configuration
        Root:
          level: "${sys:pulsar.log.root.level}"
          additivity: true
          AppenderRef:
            - ref: "${sys:pulsar.log.appender}"
              level: "${sys:pulsar.log.level}"
            - ref: Prometheus
              level: info
  
        Logger:
          - name: org.apache.bookkeeper.bookie.BookieShell
            level: info
            additivity: false
            AppenderRef:
              - ref: Console
  
          - name: verbose
            level: info
            additivity: false
            AppenderRef:
              - ref: Console
  
        # Logger to inject filter script
    #     - name: org.apache.bookkeeper.mledger.impl.ManagedLedgerImpl
    #       level: debug
    #       additivity: false
    #       AppenderRef:
    #         ref: "${sys:pulsar.log.appender}"
    #         ScriptFilter:
    #           onMatch: ACCEPT
    #           onMisMatch: DENY
    #           ScriptRef:
    #             ref: filter.js
---
# Source: pulsar/templates/broker/broker-configmap.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
apiVersion: v1
kind: ConfigMap
metadata:
  name: "zxc-pulsar-broker"
  namespace: default
  labels:
    app: pulsar
    chart: pulsar-2.8.4
    release: zxc
    heritage: Helm
    cluster: zxc-pulsar
    component: broker
data:
  # Metadata settings
  zookeeperServers: "zxc-pulsar-zookeeper:2281"
  configurationStoreServers: "zxc-pulsar-zookeeper:2281"

  # Broker settings
  clusterName: "zxc-pulsar"
  exposeTopicLevelMetricsInPrometheus: "true"
  numHttpServerThreads: "8"
  zooKeeperSessionTimeoutMillis: "30000"
  statusFilePath: "/pulsar/status"

  ## Offloading settings

  # Function Worker Settings
  # function worker configuration
  functionsWorkerEnabled: "true"

  # prometheus needs to access /metrics endpoint
  webServicePort: "8080"
  brokerServicePortTls: "6651"
  webServicePortTls: "8443"
  # TLS Settings
  tlsEnabled: "true"
  tlsCertificateFilePath: "/pulsar/certs/broker/tls.crt"
  tlsKeyFilePath: "/pulsar/certs/broker/tls.key"
  tlsTrustCertsFilePath: "/pulsar/certs/ca/ca.crt"
  brokerClientTlsEnabled: "true"
  brokerClientTrustCertsFilePath: "/pulsar/certs/ca/ca.crt"

  # Authentication Settings
  # bookkeeper tls settings
  bookkeeperTLSClientAuthentication: "true"
  bookkeeperTLSKeyFileType: "PEM"
  bookkeeperTLSKeyFilePath: "/pulsar/certs/broker/tls.key"
  bookkeeperTLSCertificateFilePath: "/pulsar/certs/broker/tls.crt"
  bookkeeperTLSTrustCertsFilePath: "/pulsar/certs/ca/ca.crt"
  bookkeeperTLSTrustCertTypes: "PEM"
  PULSAR_PREFIX_bookkeeperTLSClientAuthentication: "true"
  PULSAR_PREFIX_bookkeeperTLSKeyFileType: "PEM"
  PULSAR_PREFIX_bookkeeperTLSKeyFilePath: "/pulsar/certs/broker/tls.key"
  PULSAR_PREFIX_bookkeeperTLSCertificateFilePath: "/pulsar/certs/broker/tls.crt"
  PULSAR_PREFIX_bookkeeperTLSTrustCertsFilePath: "/pulsar/certs/ca/ca.crt"
  PULSAR_PREFIX_bookkeeperTLSTrustCertTypes: "PEM"
  # https://github.com/apache/bookkeeper/pull/2300
  bookkeeperUseV2WireProtocol: "false"
  PULSAR_GC: |
    -XX:+UseG1GC -XX:MaxGCPauseMillis=10 -Dio.netty.leakDetectionLevel=disabled -Dio.netty.recycler.linkCapacity=1024 -XX:+ParallelRefProcEnabled -XX:+UnlockExperimentalVMOptions -XX:+AggressiveOpts -XX:+DoEscapeAnalysis -XX:ParallelGCThreads=4 -XX:ConcGCThreads=4 -XX:G1NewSizePercent=50 -XX:+DisableExplicitGC -XX:-ResizePLAB -XX:+ExitOnOutOfMemoryError -XX:+PerfDisableSharedMem
  PULSAR_MEM: |
    -Xms128m -Xmx256m -XX:MaxDirectMemorySize=256m
  managedLedgerDefaultAckQuorum: "2"
  managedLedgerDefaultEnsembleSize: "3"
  managedLedgerDefaultWriteQuorum: "3"
  # Include log configuration file, If you want to configure the log level and other configuration
  # items, you can modify the configmap, and eventually it will overwrite the log4j2.yaml file under conf
  log4j2.yaml: |
    #
    # Licensed to the Apache Software Foundation (ASF) under one
    # or more contributor license agreements.  See the NOTICE file
    # distributed with this work for additional information
    # regarding copyright ownership.  The ASF licenses this file
    # to you under the Apache License, Version 2.0 (the
    # "License"); you may not use this file except in compliance
    # with the License.  You may obtain a copy of the License at
    #
    #   http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing,
    # software distributed under the License is distributed on an
    # "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    # KIND, either express or implied.  See the License for the
    # specific language governing permissions and limitations
    # under the License.
    #
  
  
    Configuration:
      status: INFO
      monitorInterval: 30
      name: pulsar
      packages: io.prometheus.client.log4j2
  
      Properties:
        Property:
          - name: "pulsar.log.dir"
            value: "logs"
          - name: "pulsar.log.file"
            value: "pulsar.log"
          - name: "pulsar.log.appender"
            value: "RoutingAppender"
          - name: "pulsar.log.root.level"
            value: "info"
          - name: "pulsar.log.level"
            value: "info"
          - name: "pulsar.routing.appender.default"
            value: "Console"
  
      # Example: logger-filter script
      Scripts:
        ScriptFile:
          name: filter.js
          language: JavaScript
          path: ./conf/log4j2-scripts/filter.js
          charset: UTF-8
  
      Appenders:
  
        # Console
        Console:
          name: Console
          target: SYSTEM_OUT
          PatternLayout:
            Pattern: "%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n"
  
        # Rolling file appender configuration
        RollingFile:
          name: RollingFile
          fileName: "${sys:pulsar.log.dir}/${sys:pulsar.log.file}"
          filePattern: "${sys:pulsar.log.dir}/${sys:pulsar.log.file}-%d{MM-dd-yyyy}-%i.log.gz"
          immediateFlush: false
          PatternLayout:
            Pattern: "%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n"
          Policies:
            TimeBasedTriggeringPolicy:
              interval: 1
              modulate: true
            SizeBasedTriggeringPolicy:
              size: 1 GB
          # Delete file older than 30days
          DefaultRolloverStrategy:
              Delete:
                basePath: ${sys:pulsar.log.dir}
                maxDepth: 2
                IfFileName:
                  glob: "*/${sys:pulsar.log.file}*log.gz"
                IfLastModified:
                  age: 30d
  
        Prometheus:
          name: Prometheus
  
        # Routing
        Routing:
          name: RoutingAppender
          Routes:
            pattern: "$${ctx:function}"
            Route:
              -
                Routing:
                  name: InstanceRoutingAppender
                  Routes:
                    pattern: "$${ctx:instance}"
                    Route:
                      -
                        RollingFile:
                          name: "Rolling-${ctx:function}"
                          fileName : "${sys:pulsar.log.dir}/functions/${ctx:function}/${ctx:functionname}-${ctx:instance}.log"
                          filePattern : "${sys:pulsar.log.dir}/functions/${sys:pulsar.log.file}-${ctx:instance}-%d{MM-dd-yyyy}-%i.log.gz"
                          PatternLayout:
                            Pattern: "%d{ABSOLUTE} %level{length=5} [%thread] [instance: %X{instance}] %logger{1} - %msg%n"
                          Policies:
                            TimeBasedTriggeringPolicy:
                              interval: 1
                              modulate: true
                            SizeBasedTriggeringPolicy:
                              size: "20MB"
                            # Trigger every day at midnight that also scan
                            # roll-over strategy that deletes older file
                            CronTriggeringPolicy:
                              schedule: "0 0 0 * * ?"
                          # Delete file older than 30days
                          DefaultRolloverStrategy:
                              Delete:
                                basePath: ${sys:pulsar.log.dir}
                                maxDepth: 2
                                IfFileName:
                                  glob: "*/${sys:pulsar.log.file}*log.gz"
                                IfLastModified:
                                  age: 30d
                      - ref: "${sys:pulsar.routing.appender.default}"
                        key: "${ctx:function}"
              - ref: "${sys:pulsar.routing.appender.default}"
                key: "${ctx:function}"
  
      Loggers:
  
        # Default root logger configuration
        Root:
          level: "${sys:pulsar.log.root.level}"
          additivity: true
          AppenderRef:
            - ref: "${sys:pulsar.log.appender}"
              level: "${sys:pulsar.log.level}"
            - ref: Prometheus
              level: info
  
        Logger:
          - name: org.apache.bookkeeper.bookie.BookieShell
            level: info
            additivity: false
            AppenderRef:
              - ref: Console
  
          - name: io.streamnative.pulsar.broker.authorization.AuthorizationProviderVault
            level: warn
            additivity: false
            AppenderRef:
              - ref: Console
  
          - name: verbose
            level: info
            additivity: false
            AppenderRef:
              - ref: Console
  
        # Logger to inject filter script
    #     - name: org.apache.bookkeeper.mledger.impl.ManagedLedgerImpl
    #       level: debug
    #       additivity: false
    #       AppenderRef:
    #         ref: "${sys:pulsar.log.appender}"
    #         ScriptFilter:
    #           onMatch: ACCEPT
    #           onMisMatch: DENY
    #           ScriptRef:
    #             ref: filter.js
---
# Source: pulsar/templates/broker/function-worker-configfile-configmap.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
## function config map
apiVersion: v1
kind: ConfigMap
metadata:
  name: "zxc-pulsar-functions-worker-configfile"
  namespace: default
  labels:
    app: pulsar
    chart: pulsar-2.8.4
    release: zxc
    heritage: Helm
    cluster: zxc-pulsar
    component: functions-worker
data:
  functions_worker.yml: |
    # Function package management
    numFunctionPackageReplicas: 3
    pulsarServiceUrl: pulsar://localhost:6650
    pulsarWebServiceUrl: http://localhost:8080
    pulsarFunctionsCluster: zxc-pulsar
    functionRuntimeFactoryConfigs:
      jobNamespace: default
      pulsarDockerImageName: "streamnative/sn-pulsar:2.8.0.8"
      pulsarRootDir: /pulsarpulsarAdminUrl: https://localhost:8443pulsarServiceUrl: pulsar+ssl://localhost:6651
      changeConfigMap: "zxc-pulsar-functions-worker-config"
      changeConfigMapNamespace: default
      submittingInsidePod: true
      installUserCodeDependencies: true
    # runtime customizer
    assignmentWriteMaxRetries: 60
    clusterCoordinationTopicName: coordinate
    connectorsDirectory: ./connectors
    downloadDirectory: download/pulsar_functions
    failureCheckFreqMs: 30000
    functionAssignmentTopicName: assignments
    functionMetadataTopicName: metadata
    functionRuntimeFactoryClassName: org.apache.pulsar.functions.runtime.kubernetes.KubernetesRuntimeFactory
    functionsDirectory: ./functions
    initialBrokerReconnectMaxRetries: 60
    instanceLivenessCheckFreqMs: 30000
    narExtractionDirectory: ""
    numHttpServerThreads: 8
    pulsarFunctionsNamespace: public/functions
    rescheduleTimeoutMs: 60000
    schedulerClassName: org.apache.pulsar.functions.worker.scheduler.RoundRobinScheduler
    topicCompactionFrequencySec: 1800
---
# Source: pulsar/templates/broker/function-worker-configmap.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
## function config map
apiVersion: v1
kind: ConfigMap
metadata:
  name: "zxc-pulsar-functions-worker-config"
  namespace: default
  labels:
    app: pulsar
    chart: pulsar-2.8.4
    release: zxc
    heritage: Helm
    cluster: zxc-pulsar
    component: functions-worker
data:
  pulsarDockerImageName: "streamnative/sn-pulsar:2.8.0.8"
---
# Source: pulsar/templates/proxy/proxy-configmap.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
apiVersion: v1
kind: ConfigMap
metadata:
  name: "zxc-pulsar-proxy"
  namespace: default
  labels:
    app: pulsar
    chart: pulsar-2.8.4
    release: zxc
    heritage: Helm
    cluster: zxc-pulsar
    component: proxy
data:
  clusterName: zxc-pulsar
  httpNumThreads: "8"
  statusFilePath: "/pulsar/status"
  # prometheus needs to access /metrics endpoint
  webServicePort: "8080"
  tlsEnabledInProxy: "true"
  servicePortTls: "6651"
  webServicePortTls: "443"
  tlsCertificateFilePath: "/pulsar/certs/proxy/tls.crt"
  tlsKeyFilePath: "/pulsar/certs/proxy/tls.key"
  tlsTrustCertsFilePath: "/pulsar/certs/ca/ca.crt"
  # if broker enables TLS, configure proxy to talk to broker using TLS
  brokerServiceURLTLS: pulsar+ssl://zxc-pulsar-broker:6651
  brokerWebServiceURLTLS: https://zxc-pulsar-broker:8443
  tlsEnabledWithBroker: "true"
  tlsCertRefreshCheckDurationSec: "300"
  brokerClientTrustCertsFilePath: "/pulsar/certs/broker/ca.crt"

  # Authentication Settings
  PULSAR_GC: |
    -XX:+UseG1GC -XX:MaxGCPauseMillis=10 -Dio.netty.leakDetectionLevel=disabled -Dio.netty.recycler.linkCapacity=1024 -XX:+ParallelRefProcEnabled -XX:+UnlockExperimentalVMOptions -XX:+AggressiveOpts -XX:+DoEscapeAnalysis -XX:ParallelGCThreads=4 -XX:ConcGCThreads=4 -XX:G1NewSizePercent=50 -XX:+DisableExplicitGC -XX:-ResizePLAB -XX:+ExitOnOutOfMemoryError -XX:+PerfDisableSharedMem
  PULSAR_MEM: |
    -Xms64m -Xmx64m -XX:MaxDirectMemorySize=64m
  # Include log configuration file, If you want to configure the log level and other configuration
  # items, you can modify the configmap, and eventually it will overwrite the log4j2.yaml file under conf
  log4j2.yaml: |
    #
    # Licensed to the Apache Software Foundation (ASF) under one
    # or more contributor license agreements.  See the NOTICE file
    # distributed with this work for additional information
    # regarding copyright ownership.  The ASF licenses this file
    # to you under the Apache License, Version 2.0 (the
    # "License"); you may not use this file except in compliance
    # with the License.  You may obtain a copy of the License at
    #
    #   http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing,
    # software distributed under the License is distributed on an
    # "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    # KIND, either express or implied.  See the License for the
    # specific language governing permissions and limitations
    # under the License.
    #
  
  
    Configuration:
      status: INFO
      monitorInterval: 30
      name: pulsar
      packages: io.prometheus.client.log4j2
  
      Properties:
        Property:
          - name: "pulsar.log.dir"
            value: "logs"
          - name: "pulsar.log.file"
            value: "pulsar.log"
          - name: "pulsar.log.appender"
            value: "RoutingAppender"
          - name: "pulsar.log.root.level"
            value: "info"
          - name: "pulsar.log.level"
            value: "info"
          - name: "pulsar.routing.appender.default"
            value: "Console"
  
      # Example: logger-filter script
      Scripts:
        ScriptFile:
          name: filter.js
          language: JavaScript
          path: ./conf/log4j2-scripts/filter.js
          charset: UTF-8
  
      Appenders:
  
        # Console
        Console:
          name: Console
          target: SYSTEM_OUT
          PatternLayout:
            Pattern: "%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n"
  
        # Rolling file appender configuration
        RollingFile:
          name: RollingFile
          fileName: "${sys:pulsar.log.dir}/${sys:pulsar.log.file}"
          filePattern: "${sys:pulsar.log.dir}/${sys:pulsar.log.file}-%d{MM-dd-yyyy}-%i.log.gz"
          immediateFlush: false
          PatternLayout:
            Pattern: "%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n"
          Policies:
            TimeBasedTriggeringPolicy:
              interval: 1
              modulate: true
            SizeBasedTriggeringPolicy:
              size: 1 GB
          # Delete file older than 30days
          DefaultRolloverStrategy:
              Delete:
                basePath: ${sys:pulsar.log.dir}
                maxDepth: 2
                IfFileName:
                  glob: "*/${sys:pulsar.log.file}*log.gz"
                IfLastModified:
                  age: 30d
  
        Prometheus:
          name: Prometheus
  
        # Routing
        Routing:
          name: RoutingAppender
          Routes:
            pattern: "$${ctx:function}"
            Route:
              -
                Routing:
                  name: InstanceRoutingAppender
                  Routes:
                    pattern: "$${ctx:instance}"
                    Route:
                      -
                        RollingFile:
                          name: "Rolling-${ctx:function}"
                          fileName : "${sys:pulsar.log.dir}/functions/${ctx:function}/${ctx:functionname}-${ctx:instance}.log"
                          filePattern : "${sys:pulsar.log.dir}/functions/${sys:pulsar.log.file}-${ctx:instance}-%d{MM-dd-yyyy}-%i.log.gz"
                          PatternLayout:
                            Pattern: "%d{ABSOLUTE} %level{length=5} [%thread] [instance: %X{instance}] %logger{1} - %msg%n"
                          Policies:
                            TimeBasedTriggeringPolicy:
                              interval: 1
                              modulate: true
                            SizeBasedTriggeringPolicy:
                              size: "20MB"
                            # Trigger every day at midnight that also scan
                            # roll-over strategy that deletes older file
                            CronTriggeringPolicy:
                              schedule: "0 0 0 * * ?"
                          # Delete file older than 30days
                          DefaultRolloverStrategy:
                              Delete:
                                basePath: ${sys:pulsar.log.dir}
                                maxDepth: 2
                                IfFileName:
                                  glob: "*/${sys:pulsar.log.file}*log.gz"
                                IfLastModified:
                                  age: 30d
                      - ref: "${sys:pulsar.routing.appender.default}"
                        key: "${ctx:function}"
              - ref: "${sys:pulsar.routing.appender.default}"
                key: "${ctx:function}"
  
      Loggers:
  
        # Default root logger configuration
        Root:
          level: "${sys:pulsar.log.root.level}"
          additivity: true
          AppenderRef:
            - ref: "${sys:pulsar.log.appender}"
              level: "${sys:pulsar.log.level}"
            - ref: Prometheus
              level: info
  
        Logger:
          - name: org.apache.bookkeeper.bookie.BookieShell
            level: info
            additivity: false
            AppenderRef:
              - ref: Console
  
          - name: verbose
            level: info
            additivity: false
            AppenderRef:
              - ref: Console
  
        # Logger to inject filter script
    #     - name: org.apache.bookkeeper.mledger.impl.ManagedLedgerImpl
    #       level: debug
    #       additivity: false
    #       AppenderRef:
    #         ref: "${sys:pulsar.log.appender}"
    #         ScriptFilter:
    #           onMatch: ACCEPT
    #           onMisMatch: DENY
    #           ScriptRef:
    #             ref: filter.js
---
# Source: pulsar/templates/tls/keytool.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

# script to process key/cert to keystore and truststore
apiVersion: v1
kind: ConfigMap
metadata:
  name: "zxc-pulsar-keytool-configmap"
  namespace: default
  labels:
    app: pulsar
    chart: pulsar-2.8.4
    release: zxc
    heritage: Helm
    cluster: zxc-pulsar
    component: keytool 
data:
  keytool.sh: |
    #!/bin/bash
    component=$1
    name=$2
    isClient=$3
    crtFile=/pulsar/certs/${component}/tls.crt
    keyFile=/pulsar/certs/${component}/tls.key
    caFile=/pulsar/certs/ca/ca.crt
    p12File=/pulsar/${component}.p12
    keyStoreFile=/pulsar/${component}.keystore.jks
    trustStoreFile=/pulsar/${component}.truststore.jks
    
    function checkFile() {
        local file=$1
        local len=$(wc -c ${file} | awk '{print $1}')
        echo "processing ${file} : len = ${len}"
        if [ ! -f ${file} ]; then
            echo "${file} is not found"
            return -1
        fi
        if [ $len -le 0 ]; then
            echo "${file} is empty"
            return -1
        fi
    }

    function ensureFileNotEmpty() {
        local file=$1
        until checkFile ${file}; do
            echo "file isn't initialized yet ... check in 3 seconds ..." && sleep 3;
        done;
    }
    
    ensureFileNotEmpty ${crtFile}
    ensureFileNotEmpty ${keyFile}
    ensureFileNotEmpty ${caFile}
    
    export PASSWORD=$(head /dev/urandom | base64 | head -c 24)
    
    openssl pkcs12 \
        -export \
        -in ${crtFile} \
        -inkey ${keyFile} \
        -out ${p12File} \
        -name ${name} \
        -passout "pass:${PASSWORD}"
    
    keytool -importkeystore \
        -srckeystore ${p12File} \
        -srcstoretype PKCS12 -srcstorepass "${PASSWORD}" \
        -alias ${name} \
        -destkeystore ${keyStoreFile} \
        -deststorepass "${PASSWORD}"
    
    keytool -import \
        -file ${caFile} \
        -storetype JKS \
        -alias ${name} \
        -keystore ${trustStoreFile} \
        -storepass "${PASSWORD}" \
        -trustcacerts -noprompt
    
    ensureFileNotEmpty ${keyStoreFile}
    ensureFileNotEmpty ${trustStoreFile}
    
    if [[ "x${isClient}" == "xtrue" ]]; then
        echo "update tls client settings ..."
        echo $'\n' >> conf/pulsar_env.sh
        echo "PULSAR_EXTRA_OPTS=\"${PULSAR_EXTRA_OPTS} -Dzookeeper.clientCnxnSocket=org.apache.zookeeper.ClientCnxnSocketNetty -Dzookeeper.client.secure=true -Dzookeeper.ssl.keyStore.location=${keyStoreFile} -Dzookeeper.ssl.keyStore.password=${PASSWORD} -Dzookeeper.ssl.trustStore.location=${trustStoreFile} -Dzookeeper.ssl.trustStore.password=${PASSWORD}\"" >> conf/pulsar_env.sh
        echo $'\n' >> conf/bkenv.sh
        echo "BOOKIE_EXTRA_OPTS=\"${BOOKIE_EXTRA_OPTS} -Dzookeeper.clientCnxnSocket=org.apache.zookeeper.ClientCnxnSocketNetty -Dzookeeper.client.secure=true -Dzookeeper.ssl.keyStore.location=${keyStoreFile} -Dzookeeper.ssl.keyStore.password=${PASSWORD} -Dzookeeper.ssl.trustStore.location=${trustStoreFile} -Dzookeeper.ssl.trustStore.password=${PASSWORD}\"" >> conf/bkenv.sh
        echo $'\n' >> conf/bkenv.sh
    else
        echo "update tls client settings ..."
        echo $'\n' >> conf/pulsar_env.sh
        echo "PULSAR_EXTRA_OPTS=\"${PULSAR_EXTRA_OPTS} -Dzookeeper.ssl.keyStore.location=${keyStoreFile} -Dzookeeper.ssl.keyStore.password=${PASSWORD} -Dzookeeper.ssl.trustStore.location=${trustStoreFile} -Dzookeeper.ssl.trustStore.password=${PASSWORD}\"" >> conf/pulsar_env.sh
    fi
    echo ${PASSWORD} > conf/password
---
# Source: pulsar/templates/toolset/toolset-configmap.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
apiVersion: v1
kind: ConfigMap
metadata:
  name: "zxc-pulsar-toolset"
  namespace: default
  labels:
    app: pulsar
    chart: pulsar-2.8.4
    release: zxc
    heritage: Helm
    cluster: zxc-pulsar
    component: toolset
data:
  BOOKIE_LOG_APPENDER: "RollingFile"
  zkServers: "zxc-pulsar-zookeeper:2281"
  zkLedgersRootPath: "/ledgers"
  # enable bookkeeper http server
  httpServerEnabled: "true"
  httpServerPort: "8000"
  # config the stats provider
  statsProviderClass: org.apache.bookkeeper.stats.prometheus.PrometheusMetricsProvider
  # use hostname as the bookie id
  useHostNameAsBookieID: "true"
  webServiceUrl: "https://zxc-pulsar-proxy:443"
  brokerServiceUrl: "pulsar+ssl://zxc-pulsar-proxy:6651"
  useTls: "true"
  tlsAllowInsecureConnection: "false"
  tlsTrustCertsFilePath: "/pulsar/certs/proxy-ca/ca.crt"
  tlsEnableHostnameVerification: "false"
  # Authentication Settings
  PULSAR_MEM: |
    -Xms64M -Xmx128M -XX:MaxDirectMemorySize=128M
  # Include log configuration file, If you want to configure the log level and other configuration
  # items, you can modify the configmap, and eventually it will overwrite the log4j2.yaml file under conf
  log4j2.yaml: |
    #
    # Licensed to the Apache Software Foundation (ASF) under one
    # or more contributor license agreements.  See the NOTICE file
    # distributed with this work for additional information
    # regarding copyright ownership.  The ASF licenses this file
    # to you under the Apache License, Version 2.0 (the
    # "License"); you may not use this file except in compliance
    # with the License.  You may obtain a copy of the License at
    #
    #   http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing,
    # software distributed under the License is distributed on an
    # "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    # KIND, either express or implied.  See the License for the
    # specific language governing permissions and limitations
    # under the License.
    #
  
  
    Configuration:
      status: INFO
      monitorInterval: 30
      name: pulsar
      packages: io.prometheus.client.log4j2
  
      Properties:
        Property:
          - name: "pulsar.log.dir"
            value: "logs"
          - name: "pulsar.log.file"
            value: "pulsar.log"
          - name: "pulsar.log.appender"
            value: "RoutingAppender"
          - name: "pulsar.log.root.level"
            value: "info"
          - name: "pulsar.log.level"
            value: "info"
          - name: "pulsar.routing.appender.default"
            value: "Console"
  
      # Example: logger-filter script
      Scripts:
        ScriptFile:
          name: filter.js
          language: JavaScript
          path: ./conf/log4j2-scripts/filter.js
          charset: UTF-8
  
      Appenders:
  
        # Console
        Console:
          name: Console
          target: SYSTEM_OUT
          PatternLayout:
            Pattern: "%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n"
  
        # Rolling file appender configuration
        RollingFile:
          name: RollingFile
          fileName: "${sys:pulsar.log.dir}/${sys:pulsar.log.file}"
          filePattern: "${sys:pulsar.log.dir}/${sys:pulsar.log.file}-%d{MM-dd-yyyy}-%i.log.gz"
          immediateFlush: false
          PatternLayout:
            Pattern: "%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n"
          Policies:
            TimeBasedTriggeringPolicy:
              interval: 1
              modulate: true
            SizeBasedTriggeringPolicy:
              size: 1 GB
          # Delete file older than 30days
          DefaultRolloverStrategy:
              Delete:
                basePath: ${sys:pulsar.log.dir}
                maxDepth: 2
                IfFileName:
                  glob: "*/${sys:pulsar.log.file}*log.gz"
                IfLastModified:
                  age: 30d
  
        Prometheus:
          name: Prometheus
  
        # Routing
        Routing:
          name: RoutingAppender
          Routes:
            pattern: "$${ctx:function}"
            Route:
              -
                Routing:
                  name: InstanceRoutingAppender
                  Routes:
                    pattern: "$${ctx:instance}"
                    Route:
                      -
                        RollingFile:
                          name: "Rolling-${ctx:function}"
                          fileName : "${sys:pulsar.log.dir}/functions/${ctx:function}/${ctx:functionname}-${ctx:instance}.log"
                          filePattern : "${sys:pulsar.log.dir}/functions/${sys:pulsar.log.file}-${ctx:instance}-%d{MM-dd-yyyy}-%i.log.gz"
                          PatternLayout:
                            Pattern: "%d{ABSOLUTE} %level{length=5} [%thread] [instance: %X{instance}] %logger{1} - %msg%n"
                          Policies:
                            TimeBasedTriggeringPolicy:
                              interval: 1
                              modulate: true
                            SizeBasedTriggeringPolicy:
                              size: "20MB"
                            # Trigger every day at midnight that also scan
                            # roll-over strategy that deletes older file
                            CronTriggeringPolicy:
                              schedule: "0 0 0 * * ?"
                          # Delete file older than 30days
                          DefaultRolloverStrategy:
                              Delete:
                                basePath: ${sys:pulsar.log.dir}
                                maxDepth: 2
                                IfFileName:
                                  glob: "*/${sys:pulsar.log.file}*log.gz"
                                IfLastModified:
                                  age: 30d
                      - ref: "${sys:pulsar.routing.appender.default}"
                        key: "${ctx:function}"
              - ref: "${sys:pulsar.routing.appender.default}"
                key: "${ctx:function}"
  
      Loggers:
  
        # Default root logger configuration
        Root:
          level: "${sys:pulsar.log.root.level}"
          additivity: true
          AppenderRef:
            - ref: "${sys:pulsar.log.appender}"
              level: "${sys:pulsar.log.level}"
            - ref: Prometheus
              level: info
  
        Logger:
          - name: org.apache.bookkeeper.bookie.BookieShell
            level: info
            additivity: false
            AppenderRef:
              - ref: Console
  
          - name: verbose
            level: info
            additivity: false
            AppenderRef:
              - ref: Console
  
        # Logger to inject filter script
    #     - name: org.apache.bookkeeper.mledger.impl.ManagedLedgerImpl
    #       level: debug
    #       additivity: false
    #       AppenderRef:
    #         ref: "${sys:pulsar.log.appender}"
    #         ScriptFilter:
    #           onMatch: ACCEPT
    #           onMisMatch: DENY
    #           ScriptRef:
    #             ref: filter.js
  pulsarctl.config: |
    auth-info:
      default:
        locationoforigin: /root/.config/pulsar/config
        tls_trust_certs_file_path: "/pulsar/certs/proxy-ca/ca.crt"
        tls_allow_insecure_connection: false
        token: ""
        issuer_endpoint: ""
        client_id: ""
        audience: ""
        key_file: ""
    contexts:
      default:
        admin-service-url: "https://zxc-pulsar-proxy:443"
        bookie-service-url: http://zxc-pulsar-bookie:8000
    current-context: default
---
# Source: pulsar/templates/zookeeper/gen-zk-conf.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

apiVersion: v1
kind: ConfigMap
metadata:
  name: "zxc-pulsar-genzkconf-configmap"
  namespace: default
  labels:
    app: pulsar
    chart: pulsar-2.8.4
    release: zxc
    heritage: Helm
    cluster: zxc-pulsar
data:
  
  gen-zk-conf.sh: |
    #!/bin/bash
    
    # Apply env variables to config file and start the regular command
    
    CONF_FILE=$1
    IDX=$2
    PEER_TYPE=$3
    
    if [ $? != 0 ]; then
        echo "Error: Failed to apply changes to config file"
        exit 1
    fi
    
    DOMAIN=`hostname -d`

    if [ -n "${ZOOKEEPER_DOMAIN}" ]; then
        ZOOKEEPER_DOMAIN="${ZOOKEEPER_DOMAIN}.$(cut -d '.' -f 2- <<<${DOMAIN})"
    else
        ZOOKEEPER_DOMAIN=$DOMAIN
    fi
    
    # Generate list of servers and detect the current server ID,
    # based on the hostname
    ((IDX++))
    for SERVER in $(echo $ZOOKEEPER_SERVERS | tr "," "\n")
    do
        echo "server.$IDX=$SERVER.$ZOOKEEPER_DOMAIN:2888:3888:${PEER_TYPE};2181" >> $CONF_FILE
    
        if [ "$HOSTNAME" == "$SERVER" ]; then
            MY_ID=$IDX
            echo "Current server id $MY_ID"
        fi
    
    	((IDX++))
    done

    if [ -n "${OBSERVER_SERVER}" ]; then
        echo "server.$IDX=${OBSERVER_SERVER}.$DOMAIN:2181:2888:observer" >> $CONF_FILE
        MY_ID=$IDX
    fi

    # For ZooKeeper container we need to initialize the ZK id
    if [ ! -z "$MY_ID" ]; then
        # Get ZK data dir
        DATA_DIR=`grep '^dataDir=' $CONF_FILE | awk -F= '{print $2}'`
        if [ ! -e $DATA_DIR/myid ]; then
            echo "Creating $DATA_DIR/myid with id = $MY_ID"
            mkdir -p $DATA_DIR
            echo $MY_ID > $DATA_DIR/myid
        fi
    fi
---
# Source: pulsar/templates/zookeeper/zookeeper-configmap.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

# deploy zookeeper only when `components.zookeeper` is true
apiVersion: v1
kind: ConfigMap
metadata:
  name: "zxc-pulsar-zookeeper"
  namespace: default
  labels:
    app: pulsar
    chart: pulsar-2.8.4
    release: zxc
    heritage: Helm
    cluster: zxc-pulsar
    component: zookeeper
data:
  dataDir: /pulsar/data/zookeeper
  PULSAR_PREFIX_serverCnxnFactory: org.apache.zookeeper.server.NettyServerCnxnFactory
  serverCnxnFactory: org.apache.zookeeper.server.NettyServerCnxnFactory
  # enable zookeeper tls
  secureClientPort: "2281"
  PULSAR_PREFIX_secureClientPort: "2281"
  PULSAR_PREFIX_peerType: participant
  PULSAR_GC: |
    -XX:+UseG1GC -XX:MaxGCPauseMillis=10 -Dcom.sun.management.jmxremote -Djute.maxbuffer=10485760 -XX:+ParallelRefProcEnabled -XX:+UnlockExperimentalVMOptions -XX:+AggressiveOpts -XX:+DoEscapeAnalysis -XX:+DisableExplicitGC -XX:+PerfDisableSharedMem -Dzookeeper.forceSync=no
  PULSAR_MEM: |
    -Xms64m -Xmx128m
  # Include log configuration file, If you want to configure the log level and other configuration
  # items, you can modify the configmap, and eventually it will overwrite the log4j2.yaml file under conf
  log4j2.yaml: |
    #
    # Licensed to the Apache Software Foundation (ASF) under one
    # or more contributor license agreements.  See the NOTICE file
    # distributed with this work for additional information
    # regarding copyright ownership.  The ASF licenses this file
    # to you under the Apache License, Version 2.0 (the
    # "License"); you may not use this file except in compliance
    # with the License.  You may obtain a copy of the License at
    #
    #   http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing,
    # software distributed under the License is distributed on an
    # "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    # KIND, either express or implied.  See the License for the
    # specific language governing permissions and limitations
    # under the License.
    #
  
  
    Configuration:
      status: INFO
      monitorInterval: 30
      name: pulsar
      packages: io.prometheus.client.log4j2
  
      Properties:
        Property:
          - name: "pulsar.log.dir"
            value: "logs"
          - name: "pulsar.log.file"
            value: "pulsar.log"
          - name: "pulsar.log.appender"
            value: "RoutingAppender"
          - name: "pulsar.log.root.level"
            value: "info"
          - name: "pulsar.log.level"
            value: "info"
          - name: "pulsar.routing.appender.default"
            value: "Console"
  
      # Example: logger-filter script
      Scripts:
        ScriptFile:
          name: filter.js
          language: JavaScript
          path: ./conf/log4j2-scripts/filter.js
          charset: UTF-8
  
      Appenders:
  
        # Console
        Console:
          name: Console
          target: SYSTEM_OUT
          PatternLayout:
            Pattern: "%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n"
  
        # Rolling file appender configuration
        RollingFile:
          name: RollingFile
          fileName: "${sys:pulsar.log.dir}/${sys:pulsar.log.file}"
          filePattern: "${sys:pulsar.log.dir}/${sys:pulsar.log.file}-%d{MM-dd-yyyy}-%i.log.gz"
          immediateFlush: false
          PatternLayout:
            Pattern: "%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n"
          Policies:
            TimeBasedTriggeringPolicy:
              interval: 1
              modulate: true
            SizeBasedTriggeringPolicy:
              size: 1 GB
          # Delete file older than 30days
          DefaultRolloverStrategy:
              Delete:
                basePath: ${sys:pulsar.log.dir}
                maxDepth: 2
                IfFileName:
                  glob: "*/${sys:pulsar.log.file}*log.gz"
                IfLastModified:
                  age: 30d
  
        Prometheus:
          name: Prometheus
  
        # Routing
        Routing:
          name: RoutingAppender
          Routes:
            pattern: "$${ctx:function}"
            Route:
              -
                Routing:
                  name: InstanceRoutingAppender
                  Routes:
                    pattern: "$${ctx:instance}"
                    Route:
                      -
                        RollingFile:
                          name: "Rolling-${ctx:function}"
                          fileName : "${sys:pulsar.log.dir}/functions/${ctx:function}/${ctx:functionname}-${ctx:instance}.log"
                          filePattern : "${sys:pulsar.log.dir}/functions/${sys:pulsar.log.file}-${ctx:instance}-%d{MM-dd-yyyy}-%i.log.gz"
                          PatternLayout:
                            Pattern: "%d{ABSOLUTE} %level{length=5} [%thread] [instance: %X{instance}] %logger{1} - %msg%n"
                          Policies:
                            TimeBasedTriggeringPolicy:
                              interval: 1
                              modulate: true
                            SizeBasedTriggeringPolicy:
                              size: "20MB"
                            # Trigger every day at midnight that also scan
                            # roll-over strategy that deletes older file
                            CronTriggeringPolicy:
                              schedule: "0 0 0 * * ?"
                          # Delete file older than 30days
                          DefaultRolloverStrategy:
                              Delete:
                                basePath: ${sys:pulsar.log.dir}
                                maxDepth: 2
                                IfFileName:
                                  glob: "*/${sys:pulsar.log.file}*log.gz"
                                IfLastModified:
                                  age: 30d
                      - ref: "${sys:pulsar.routing.appender.default}"
                        key: "${ctx:function}"
              - ref: "${sys:pulsar.routing.appender.default}"
                key: "${ctx:function}"
  
      Loggers:
  
        # Default root logger configuration
        Root:
          level: "${sys:pulsar.log.root.level}"
          additivity: true
          AppenderRef:
            - ref: "${sys:pulsar.log.appender}"
              level: "${sys:pulsar.log.level}"
            - ref: Prometheus
              level: info
  
        Logger:
          - name: org.apache.bookkeeper.bookie.BookieShell
            level: info
            additivity: false
            AppenderRef:
              - ref: Console
  
          - name: verbose
            level: info
            additivity: false
            AppenderRef:
              - ref: Console
  
        # Logger to inject filter script
    #     - name: org.apache.bookkeeper.mledger.impl.ManagedLedgerImpl
    #       level: debug
    #       additivity: false
    #       AppenderRef:
    #         ref: "${sys:pulsar.log.appender}"
    #         ScriptFilter:
    #           onMatch: ACCEPT
    #           onMisMatch: DENY
    #           ScriptRef:
    #             ref: filter.js
---
# Source: pulsar/charts/loki-stack/charts/prometheus/templates/alertmanager-pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    component: "alertmanager"
    app: prometheus
    release: zxc
    chart: prometheus-9.3.3
    heritage: Helm
  name: zxc-prometheus-alertmanager
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: "2Gi"
---
# Source: pulsar/charts/loki-stack/charts/prometheus/templates/server-pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    component: "server"
    app: prometheus
    release: zxc
    chart: prometheus-9.3.3
    heritage: Helm
  name: zxc-prometheus-server
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: "8Gi"
---
# Source: pulsar/charts/loki-stack/charts/fluent-bit/templates/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    app: fluent-bit-loki
    chart: fluent-bit-0.1.1
    release: zxc
    heritage: Helm
  name: zxc-fluent-bit-loki-clusterrole
  namespace: default
rules:
- apiGroups: [""] # "" indicates the core API group
  resources:
  - namespaces
  - pods
  verbs: ["get", "watch", "list"]
---
# Source: pulsar/charts/loki-stack/charts/grafana/templates/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    app: grafana
    chart: grafana-3.8.19
    release: zxc
    heritage: Helm
  name: zxc-grafana-clusterrole
rules:
- apiGroups: [""] # "" indicates the core API group
  resources: ["configmaps", "secrets"]
  verbs: ["get", "watch", "list"]
---
# Source: pulsar/charts/loki-stack/charts/prometheus/templates/alertmanager-clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  labels:
    component: "alertmanager"
    app: prometheus
    release: zxc
    chart: prometheus-9.3.3
    heritage: Helm
  name: zxc-prometheus-alertmanager
rules:
---
# Source: pulsar/charts/loki-stack/charts/prometheus/templates/kube-state-metrics-clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  labels:
    component: "kube-state-metrics"
    app: prometheus
    release: zxc
    chart: prometheus-9.3.3
    heritage: Helm
  name: zxc-prometheus-kube-state-metrics
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
      - nodes
      - persistentvolumeclaims
      - pods
      - services
      - resourcequotas
      - replicationcontrollers
      - limitranges
      - persistentvolumeclaims
      - persistentvolumes
      - endpoints
      - secrets
      - configmaps
    verbs:
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - daemonsets
      - deployments
      - ingresses
      - replicasets
    verbs:
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - daemonsets
      - deployments
      - statefulsets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - batch
    resources:
      - cronjobs
      - jobs
    verbs:
      - list
      - watch
  - apiGroups:
      - autoscaling
    resources:
      - horizontalpodautoscalers
    verbs:
      - list
      - watch
  - apiGroups:
      - policy
    resources:
      - poddisruptionbudgets
    verbs:
      - list
      - watch
  - apiGroups:
      - certificates.k8s.io
    resources:
      - certificatesigningrequests
    verbs:
      - list
      - watch
---
# Source: pulsar/charts/loki-stack/charts/prometheus/templates/pushgateway-clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  labels:
    component: "pushgateway"
    app: prometheus
    release: zxc
    chart: prometheus-9.3.3
    heritage: Helm
  name: zxc-prometheus-pushgateway
rules:
---
# Source: pulsar/charts/loki-stack/charts/prometheus/templates/server-clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  labels:
    component: "server"
    app: prometheus
    release: zxc
    chart: prometheus-9.3.3
    heritage: Helm
  name: zxc-prometheus-server
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
      - nodes/proxy
      - nodes/metrics
      - services
      - endpoints
      - pods
      - ingresses
      - configmaps
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - "extensions"
    resources:
      - ingresses/status
      - ingresses
    verbs:
      - get
      - list
      - watch
  - nonResourceURLs:
      - "/metrics"
    verbs:
      - get
---
# Source: pulsar/charts/loki-stack/charts/promtail/templates/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    app: promtail
    chart: promtail-0.22.1
    release: zxc
    heritage: Helm
  name: zxc-promtail-clusterrole
  namespace: default
rules:
- apiGroups: [""] # "" indicates the core API group
  resources:
  - nodes
  - nodes/proxy
  - services
  - endpoints
  - pods
  verbs: ["get", "watch", "list"]
---
# Source: pulsar/templates/bookkeeper/bookkeeper-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: "zxc-pulsar-bookie-clusterrole"
  labels:
    app: pulsar
    chart: pulsar-2.8.4
    release: zxc
    heritage: Helm
    cluster: zxc-pulsar
rules:
- apiGroups: [""]
  resources:
  - persistentvolumeclaims
  - persistentvolumes
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources:
    - pods
  verbs:
    - list
    - get
---
# Source: pulsar/templates/broker/broker-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: "zxc-pulsar-broker-clusterrole"
  labels:
    app: pulsar
    chart: pulsar-2.8.4
    release: zxc
    heritage: Helm
    cluster: zxc-pulsar
rules:
- apiGroups: [""]
  resources:
  - configmap
  - configmaps
  verbs: ["get", "list", "watch"]
- apiGroups: ["", "extensions", "apps"]
  resources:
    - pods
    - services
    - deployments
    - secrets
    - statefulsets
  verbs:
    - list
    - watch
    - get
    - update
    - create
    - delete
    - patch
---
# Source: pulsar/charts/loki-stack/charts/fluent-bit/templates/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: zxc-fluent-bit-loki-clusterrolebinding
  labels:
    app: fluent-bit-loki
    chart: fluent-bit-0.1.1
    release: zxc
    heritage: Helm
subjects:
  - kind: ServiceAccount
    name: zxc-fluent-bit-loki
    namespace: default
roleRef:
  kind: ClusterRole
  name: zxc-fluent-bit-loki-clusterrole
  apiGroup: rbac.authorization.k8s.io
---
# Source: pulsar/charts/loki-stack/charts/grafana/templates/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: zxc-grafana-clusterrolebinding
  labels:
    app: grafana
    chart: grafana-3.8.19
    release: zxc
    heritage: Helm
subjects:
  - kind: ServiceAccount
    name: zxc-grafana
    namespace: default
roleRef:
  kind: ClusterRole
  name: zxc-grafana-clusterrole
  apiGroup: rbac.authorization.k8s.io
---
# Source: pulsar/charts/loki-stack/charts/prometheus/templates/alertmanager-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  labels:
    component: "alertmanager"
    app: prometheus
    release: zxc
    chart: prometheus-9.3.3
    heritage: Helm
  name: zxc-prometheus-alertmanager
subjects:
  - kind: ServiceAccount
    name: zxc-prometheus-alertmanager
    namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: zxc-prometheus-alertmanager
---
# Source: pulsar/charts/loki-stack/charts/prometheus/templates/kube-state-metrics-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  labels:
    component: "kube-state-metrics"
    app: prometheus
    release: zxc
    chart: prometheus-9.3.3
    heritage: Helm
  name: zxc-prometheus-kube-state-metrics
subjects:
  - kind: ServiceAccount
    name: zxc-prometheus-kube-state-metrics
    namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: zxc-prometheus-kube-state-metrics
---
# Source: pulsar/charts/loki-stack/charts/prometheus/templates/pushgateway-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  labels:
    component: "pushgateway"
    app: prometheus
    release: zxc
    chart: prometheus-9.3.3
    heritage: Helm
  name: zxc-prometheus-pushgateway
subjects:
  - kind: ServiceAccount
    name: zxc-prometheus-pushgateway
    namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: zxc-prometheus-pushgateway
---
# Source: pulsar/charts/loki-stack/charts/prometheus/templates/server-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  labels:
    component: "server"
    app: prometheus
    release: zxc
    chart: prometheus-9.3.3
    heritage: Helm
  name: zxc-prometheus-server
subjects:
  - kind: ServiceAccount
    name: zxc-prometheus-server
    namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: zxc-prometheus-server
---
# Source: pulsar/charts/loki-stack/charts/promtail/templates/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: zxc-promtail-clusterrolebinding
  labels:
    app: promtail
    chart: promtail-0.22.1
    release: zxc
    heritage: Helm
subjects:
  - kind: ServiceAccount
    name: zxc-promtail
    namespace: default
roleRef:
  kind: ClusterRole
  name: zxc-promtail-clusterrole
  apiGroup: rbac.authorization.k8s.io
---
# Source: pulsar/templates/bookkeeper/bookkeeper-cluster-role-binding.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: "zxc-pulsar-bookie-clusterrolebinding"
  labels:
    app: pulsar
    chart: pulsar-2.8.4
    release: zxc
    heritage: Helm
    cluster: zxc-pulsar
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: "zxc-pulsar-bookie-clusterrole"
subjects:
- kind: ServiceAccount
  name: zxc-pulsar-bookie-acct
  namespace: default
---
# Source: pulsar/templates/broker/broker-cluster-role-binding.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: "zxc-pulsar-broker-clusterrolebinding"
  labels:
    app: pulsar
    chart: pulsar-2.8.4
    release: zxc
    heritage: Helm
    cluster: zxc-pulsar
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: "zxc-pulsar-broker-clusterrole"
subjects:
- kind: ServiceAccount
  name: zxc-pulsar-broker-acct
  namespace: default
---
# Source: pulsar/charts/loki-stack/charts/fluent-bit/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: zxc-fluent-bit-loki
  namespace: default
  labels:
    app: fluent-bit-loki
    chart: fluent-bit-0.1.1
    heritage: Helm
    release: zxc
rules:
- apiGroups:      ['extensions']
  resources:      ['podsecuritypolicies']
  verbs:          ['use']
  resourceNames:  [zxc-fluent-bit-loki]
---
# Source: pulsar/charts/loki-stack/charts/grafana/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: zxc-grafana
  namespace: default
  labels:
    app: grafana
    chart: grafana-3.8.19
    heritage: Helm
    release: zxc
rules:
- apiGroups:      ['extensions']
  resources:      ['podsecuritypolicies']
  verbs:          ['use']
  resourceNames:  [zxc-grafana]
---
# Source: pulsar/charts/loki-stack/charts/grafana/templates/tests/test-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: zxc-grafana-test
  namespace: default
  labels:
    app: grafana
    chart: grafana-3.8.19
    heritage: Helm
    release: zxc
rules:
- apiGroups:      ['policy']
  resources:      ['podsecuritypolicies']
  verbs:          ['use']
  resourceNames:  [zxc-grafana-test]
---
# Source: pulsar/charts/loki-stack/charts/loki/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: zxc-loki
  namespace: default
  labels:
    app: loki
    chart: loki-0.28.1
    heritage: Helm
    release: zxc
rules:
- apiGroups:      ['extensions']
  resources:      ['podsecuritypolicies']
  verbs:          ['use']
  resourceNames:  [zxc-loki]
---
# Source: pulsar/charts/loki-stack/charts/promtail/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: zxc-promtail
  namespace: default
  labels:
    app: promtail
    chart: promtail-0.22.1
    heritage: Helm
    release: zxc
rules:
- apiGroups:      ['extensions']
  resources:      ['podsecuritypolicies']
  verbs:          ['use']
  resourceNames:  [zxc-promtail]
---
# Source: pulsar/charts/loki-stack/charts/fluent-bit/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: zxc-fluent-bit-loki
  namespace: default
  labels:
    app: fluent-bit-loki
    chart: fluent-bit-0.1.1
    heritage: Helm
    release: zxc
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: zxc-fluent-bit-loki
subjects:
- kind: ServiceAccount
  name: zxc-fluent-bit-loki
---
# Source: pulsar/charts/loki-stack/charts/grafana/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: zxc-grafana
  namespace: default
  labels:
    app: grafana
    chart: grafana-3.8.19
    heritage: Helm
    release: zxc
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: zxc-grafana
subjects:
- kind: ServiceAccount
  name: zxc-grafana
  namespace: default
---
# Source: pulsar/charts/loki-stack/charts/grafana/templates/tests/test-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: zxc-grafana-test
  namespace: default
  labels:
    app: grafana
    chart: grafana-3.8.19
    heritage: Helm
    release: zxc
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: zxc-grafana-test
subjects:
- kind: ServiceAccount
  name: zxc-grafana-test
  namespace: default
---
# Source: pulsar/charts/loki-stack/charts/loki/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: zxc-loki
  namespace: default
  labels:
    app: loki
    chart: loki-0.28.1
    heritage: Helm
    release: zxc
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: zxc-loki
subjects:
- kind: ServiceAccount
  name: zxc-loki
---
# Source: pulsar/charts/loki-stack/charts/promtail/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: zxc-promtail
  namespace: default
  labels:
    app: promtail
    chart: promtail-0.22.1
    heritage: Helm
    release: zxc
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: zxc-promtail
subjects:
- kind: ServiceAccount
  name: zxc-promtail
---
# Source: pulsar/charts/loki-stack/charts/grafana/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: zxc-grafana
  namespace: default
  labels:
    app: grafana
    chart: grafana-3.8.19
    release: zxc
    heritage: Helm
spec:
  type: ClusterIP
  ports:
    - name: service
      port: 80
      protocol: TCP
      targetPort: 3000

  selector:
    app: grafana
    release: zxc
---
# Source: pulsar/charts/loki-stack/charts/loki/templates/service-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: zxc-loki-headless
  namespace: default
  labels:
    app: loki
    chart: loki-0.28.1
    release: zxc
    heritage: Helm
    variant: headless
spec:
  clusterIP: None
  ports:
    - port: 3100
      protocol: TCP
      name: http-metrics
      targetPort: http-metrics
  selector:
    app: loki
    release: zxc
---
# Source: pulsar/charts/loki-stack/charts/loki/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: zxc-loki
  namespace: default
  labels:
    app: loki
    chart: loki-0.28.1
    release: zxc
    heritage: Helm
  annotations:
    {}
spec:
  type: ClusterIP
  ports:
    - port: 3100
      protocol: TCP
      name: http-metrics
      targetPort: http-metrics
  selector:
    app: loki
    release: zxc
---
# Source: pulsar/charts/loki-stack/charts/prometheus/templates/alertmanager-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    component: "alertmanager"
    app: prometheus
    release: zxc
    chart: prometheus-9.3.3
    heritage: Helm
  name: zxc-prometheus-alertmanager
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 9093
  selector:
    component: "alertmanager"
    app: prometheus
    release: zxc
  type: "ClusterIP"
---
# Source: pulsar/charts/loki-stack/charts/prometheus/templates/kube-state-metrics-svc.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/scrape: "true"
  labels:
    component: "kube-state-metrics"
    app: prometheus
    release: zxc
    chart: prometheus-9.3.3
    heritage: Helm
  name: zxc-prometheus-kube-state-metrics
spec:
  clusterIP: None
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8080
  selector:
    component: "kube-state-metrics"
    app: prometheus
    release: zxc
  type: "ClusterIP"
---
# Source: pulsar/charts/loki-stack/charts/prometheus/templates/node-exporter-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/scrape: "true"
  labels:
    component: "node-exporter"
    app: prometheus
    release: zxc
    chart: prometheus-9.3.3
    heritage: Helm
  name: zxc-prometheus-node-exporter
spec:
  clusterIP: None
  ports:
    - name: metrics
      port: 9100
      protocol: TCP
      targetPort: 9100
  selector:
    component: "node-exporter"
    app: prometheus
    release: zxc
  type: "ClusterIP"
---
# Source: pulsar/charts/loki-stack/charts/prometheus/templates/pushgateway-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/probe: pushgateway
  labels:
    component: "pushgateway"
    app: prometheus
    release: zxc
    chart: prometheus-9.3.3
    heritage: Helm
  name: zxc-prometheus-pushgateway
spec:
  ports:
    - name: http
      port: 9091
      protocol: TCP
      targetPort: 9091
  selector:
    component: "pushgateway"
    app: prometheus
    release: zxc
  type: "ClusterIP"
---
# Source: pulsar/charts/loki-stack/charts/prometheus/templates/server-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    component: "server"
    app: prometheus
    release: zxc
    chart: prometheus-9.3.3
    heritage: Helm
  name: zxc-prometheus-server
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 9090
  selector:
    component: "server"
    app: prometheus
    release: zxc
  type: "ClusterIP"
---
# Source: pulsar/charts/superset/charts/postgresql/templates/svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: zxc-postgresql-headless
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.2.0
    app.kubernetes.io/instance: zxc
    app.kubernetes.io/managed-by: Helm
    # Use this annotation in addition to the actual publishNotReadyAddresses
    # field below because the annotation will stop being respected soon but the
    # field is broken in some versions of Kubernetes:
    # https://github.com/kubernetes/kubernetes/issues/58662
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  type: ClusterIP
  clusterIP: None
  # We want all pods in the StatefulSet to have their addresses published for
  # the sake of the other Postgresql pods even before they're ready, since they
  # have to be able to talk to each other in order to become ready.
  publishNotReadyAddresses: true
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: zxc
---
# Source: pulsar/charts/superset/charts/postgresql/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: zxc-postgresql
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.2.0
    app.kubernetes.io/instance: zxc
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  type: ClusterIP
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: zxc
    role: primary
---
# Source: pulsar/charts/superset/charts/redis/templates/headless-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: zxc-redis-headless
  namespace: "default"
  labels:
    app: redis
    chart: redis-12.3.0
    release: zxc
    heritage: Helm
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: redis
      port: 6379
      targetPort: redis
  selector:
    app: redis
    release: zxc
---
# Source: pulsar/charts/superset/charts/redis/templates/redis-master-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: zxc-redis-master
  namespace: "default"
  labels:
    app: redis
    chart: redis-12.3.0
    release: zxc
    heritage: Helm
spec:
  type: ClusterIP
  
  ports:
    - name: redis
      port: 6379
      targetPort: redis
  selector:
    app: redis
    release: zxc
    role: master
---
# Source: pulsar/charts/superset/templates/service.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
apiVersion: v1
kind: Service
metadata:
  name: zxc-superset
  labels:
    app: superset
    chart: superset-0.1.1
    release: zxc
    heritage: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8088
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app: superset
    release: zxc
---
# Source: pulsar/templates/bookkeeper/bookkeeper-autorecovery-service.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
apiVersion: v1
kind: Service
metadata:
  name: "zxc-pulsar-recovery"
  namespace: default
  labels:
    app: pulsar
    chart: pulsar-2.8.4
    release: zxc
    heritage: Helm
    cluster: zxc-pulsar
    component: recovery
spec:
  ports:
  - name: http
    port: 8000
  clusterIP: None
  selector:
    app: pulsar
    release: zxc
    component: recovery
---
# Source: pulsar/templates/bookkeeper/bookkeeper-service.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
apiVersion: v1
kind: Service
metadata:
  name: "zxc-pulsar-bookie"
  namespace: default
  labels:
    app: pulsar
    chart: pulsar-2.8.4
    release: zxc
    heritage: Helm
    cluster: zxc-pulsar
    component: bookie
  annotations:
    publishNotReadyAddresses: "true"
spec:
  ports:
  - name: bookie
    port: 3181
  - name: http
    port: 8000
  clusterIP: None
  selector:
    app: pulsar
    release: zxc
    component: bookie
  # bookkeeper uses statefulset for getting stable bookie identifier.
  # it is okay to publish endpoints that are not ready because bookkeeper client
  # already has the ability to handle bookie failures.
  publishNotReadyAddresses: true
---
# Source: pulsar/templates/broker/broker-service.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
apiVersion: v1
kind: Service
metadata:
  name: "zxc-pulsar-broker"
  namespace: default
  labels:
    app: pulsar
    chart: pulsar-2.8.4
    release: zxc
    heritage: Helm
    cluster: zxc-pulsar
    component: broker
  annotations:
    {}
spec:
  ports:
  # prometheus needs to access /metrics endpoint
  - name: http
    port: 8080
  - name: https
    port: 8443
  - name: pulsarssl
    port: 6651
  clusterIP: None
  selector:
    app: pulsar
    release: zxc
    component: broker
---
# Source: pulsar/templates/proxy/proxy-service.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
apiVersion: v1
kind: Service
metadata:
  name: "zxc-pulsar-proxy"
  namespace: default
  labels:
    app: pulsar
    chart: pulsar-2.8.4
    release: zxc
    heritage: Helm
    cluster: zxc-pulsar
    component: proxy
  annotations:
spec:
  type: ClusterIP
  ports:
    - name: https
      port: 443
      protocol: TCP
    - name: pulsarssl
      port: 6651
      protocol: TCP
  selector:
    app: pulsar
    release: zxc
    component: proxy
---
# Source: pulsar/templates/toolset/toolset-service.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
apiVersion: v1
kind: Service
metadata:
  name: "zxc-pulsar-toolset"
  namespace: default
  labels:
    app: pulsar
    chart: pulsar-2.8.4
    release: zxc
    heritage: Helm
    cluster: zxc-pulsar
    component: toolset
spec:
  clusterIP: None
  selector:
    app: pulsar
    release: zxc
    component: toolset
---
# Source: pulsar/templates/zookeeper/zookeeper-service.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

# deploy zookeeper only when `components.zookeeper` is true
apiVersion: v1
kind: Service
metadata:
  name: "zxc-pulsar-zookeeper"
  namespace: default
  labels:
    app: pulsar
    chart: pulsar-2.8.4
    release: zxc
    heritage: Helm
    cluster: zxc-pulsar
    component: zookeeper
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  ports:
    - name: follower
      port: 2888
    - name: leader-election
      port: 3888
    - name: client
      port: 2181
    - name: client-tls
      port: 2281
  clusterIP: None
  selector:
    app: pulsar
    release: zxc
    component: zookeeper
---
# Source: pulsar/charts/loki-stack/charts/fluent-bit/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: zxc-fluent-bit-loki
  namespace: default
  labels:
    app: fluent-bit-loki
    chart: fluent-bit-0.1.1
    release: zxc
    heritage: Helm
  annotations:
    {}
spec:
  selector:
    matchLabels:
      app: fluent-bit-loki
      release: zxc
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: fluent-bit-loki
        release: zxc
      annotations:
        checksum/config: e21d314665697fcdd17926db37b0bfbd6eb8fdeab7b02fcdce504ee81ada4e4d
        prometheus.io/path: /api/v1/metrics/prometheus
        prometheus.io/port: "2020"
        prometheus.io/scrape: "true"
    spec:
      serviceAccountName: zxc-fluent-bit-loki
      containers:
        - name: fluent-bit-loki
          image: "grafana/fluent-bit-plugin-loki:1.4.1-amd64"
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: config
              mountPath: /fluent-bit/etc
            - name: run
              mountPath: /run/fluent-bit
            - mountPath: /var/log
              name: varlog
            - mountPath: /var/lib/docker/containers
              name: varlibdockercontainers
              readOnly: true
          ports:
            - containerPort: 2020
              name: http-metrics
          resources:
            limits:
              memory: 100Mi
            requests:
              cpu: 100m
              memory: 100Mi
      nodeSelector:
        {}
      affinity:
        {}
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
      terminationGracePeriodSeconds: 10
      volumes:
        - name: config
          configMap:
            name: zxc-fluent-bit-loki
        - name: run
          hostPath:
            path: /run/fluent-bit
        - hostPath:
            path: /var/log
          name: varlog
        - hostPath:
            path: /var/lib/docker/containers
          name: varlibdockercontainers
---
# Source: pulsar/charts/loki-stack/charts/prometheus/templates/node-exporter-daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    component: "node-exporter"
    app: prometheus
    release: zxc
    chart: prometheus-9.3.3
    heritage: Helm
  name: zxc-prometheus-node-exporter
spec:
  selector:
    matchLabels:
      component: "node-exporter"
      app: prometheus
      release: zxc
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        component: "node-exporter"
        app: prometheus
        release: zxc
        chart: prometheus-9.3.3
        heritage: Helm
    spec:
      serviceAccountName: zxc-prometheus-node-exporter
      containers:
        - name: prometheus-node-exporter
          image: "prom/node-exporter:v0.18.0"
          imagePullPolicy: "IfNotPresent"
          args:
            - --path.procfs=/host/proc
            - --path.sysfs=/host/sys
          ports:
            - name: metrics
              containerPort: 9100
              hostPort: 9100
          resources:
            {}
          volumeMounts:
            - name: proc
              mountPath: /host/proc
              readOnly:  true
            - name: sys
              mountPath: /host/sys
              readOnly: true
      hostNetwork: true
      hostPID: true
      volumes:
        - name: proc
          hostPath:
            path: /proc
        - name: sys
          hostPath:
            path: /sys
---
# Source: pulsar/charts/loki-stack/charts/promtail/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: zxc-promtail
  namespace: default
  labels:
    app: promtail
    chart: promtail-0.22.1
    release: zxc
    heritage: Helm
  annotations:
    {}
spec:
  selector:
    matchLabels:
      app: promtail
      release: zxc
  updateStrategy:
    {}
  template:
    metadata:
      labels:
        app: promtail
        release: zxc          
      annotations:
        checksum/config: 8d217ba187384bfb76dcf6f8db84b4e10280a97e5af3435cb6afa7f71ebc6460
        prometheus.io/port: http-metrics
        prometheus.io/scrape: "true"
    spec:
      serviceAccountName: zxc-promtail
      containers:
        - name: promtail
          image: "grafana/promtail:1.4.1"
          imagePullPolicy: IfNotPresent
          args:
            - "-config.file=/etc/promtail/promtail.yaml"
            - "-client.url=http://zxc-loki:3100/loki/api/v1/push"
          volumeMounts:
            - name: config
              mountPath: /etc/promtail
            - name: run
              mountPath: /run/promtail
            - mountPath: /var/lib/docker/containers
              name: docker
              readOnly: true
            - mountPath: /var/log/pods
              name: pods
              readOnly: true
          env:
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          ports:
            - containerPort: 3101
              name: http-metrics
          securityContext:
            readOnlyRootFilesystem: true
            runAsGroup: 0
            runAsUser: 0
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            {}
      nodeSelector:
        {}
      affinity:
        {}
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
      volumes:
        - name: config
          configMap:
            name: zxc-promtail
        - name: run
          hostPath:
            path: /run/promtail
        - hostPath:
            path: /var/lib/docker/containers
          name: docker
        - hostPath:
            path: /var/log/pods
          name: pods
---
# Source: pulsar/charts/loki-stack/charts/grafana/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zxc-grafana
  namespace: default
  labels:
    app: grafana
    chart: grafana-3.8.19
    release: zxc
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
      release: zxc
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: grafana
        release: zxc
      annotations:
        checksum/config: 28022be28b337522572069771b3c31f4c32ee8f95f9f62733cc5f427373a0cab
        checksum/dashboards-json-config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
        checksum/sc-dashboard-provider-config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
        checksum/secret: c1a277282cfb712f6114629dc8f1484ca37e500bb37c1a984241908e9c1aff38
    spec:
      
      serviceAccountName: zxc-grafana
      securityContext:
        fsGroup: 472
        runAsUser: 472
      initContainers:
        - name: grafana-sc-datasources
          image: "kiwigrid/k8s-sidecar:0.1.20"
          imagePullPolicy: IfNotPresent
          env:
            - name: METHOD
              value: LIST
            - name: LABEL
              value: "grafana_datasource"
            - name: FOLDER
              value: "/etc/grafana/provisioning/datasources"
            - name: RESOURCE
              value: "both"
          resources:
            {}
          volumeMounts:
            - name: sc-datasources-volume
              mountPath: "/etc/grafana/provisioning/datasources"
      containers:
        - name: grafana
          image: "grafana/grafana:6.7.0"
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: config
              mountPath: "/etc/grafana/grafana.ini"
              subPath: grafana.ini
            - name: ldap
              mountPath: "/etc/grafana/ldap.toml"
              subPath: ldap.toml
            - name: storage
              mountPath: "/var/lib/grafana"
            - name: sc-datasources-volume
              mountPath: "/etc/grafana/provisioning/datasources"
          ports:
            - name: service
              containerPort: 80
              protocol: TCP
            - name: grafana
              containerPort: 3000
              protocol: TCP
          env:
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: zxc-grafana
                  key: admin-user
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: zxc-grafana
                  key: admin-password
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 60
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
          resources:
            {}
      volumes:
        - name: config
          configMap:
            name: zxc-grafana
        - name: ldap
          secret:
            secretName: zxc-grafana
            items:
              - key: ldap-toml
                path: ldap.toml
        - name: storage
          emptyDir: {}
        - name: sc-datasources-volume
          emptyDir: {}
---
# Source: pulsar/charts/loki-stack/charts/prometheus/templates/alertmanager-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: "alertmanager"
    app: prometheus
    release: zxc
    chart: prometheus-9.3.3
    heritage: Helm
  name: zxc-prometheus-alertmanager
spec:
  selector:
    matchLabels:
      component: "alertmanager"
      app: prometheus
      release: zxc
  replicas: 1
  template:
    metadata:
      labels:
        component: "alertmanager"
        app: prometheus
        release: zxc
        chart: prometheus-9.3.3
        heritage: Helm
    spec:
      serviceAccountName: zxc-prometheus-alertmanager
      containers:
        - name: prometheus-alertmanager
          image: "prom/alertmanager:v0.18.0"
          imagePullPolicy: "IfNotPresent"
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
          args:
            - --config.file=/etc/config/alertmanager.yml
            - --storage.path=/data
            - --cluster.advertise-address=$(POD_IP):6783
            - --web.external-url=/

          ports:
            - containerPort: 9093
          readinessProbe:
            httpGet:
              path: /#/status
              port: 9093
            initialDelaySeconds: 30
            timeoutSeconds: 30
          resources:
            {}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
            - name: storage-volume
              mountPath: "/data"
              subPath: ""

        - name: prometheus-alertmanager-configmap-reload
          image: "jimmidyson/configmap-reload:v0.2.2"
          imagePullPolicy: "IfNotPresent"
          args:
            - --volume-dir=/etc/config
            - --webhook-url=http://127.0.0.1:9093/-/reload
          resources:
            {}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
              readOnly: true
      securityContext:
        fsGroup: 65534
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
      volumes:
        - name: config-volume
          configMap:
            name: zxc-prometheus-alertmanager
        - name: storage-volume
          persistentVolumeClaim:
            claimName: zxc-prometheus-alertmanager
---
# Source: pulsar/charts/loki-stack/charts/prometheus/templates/kube-state-metrics-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: "kube-state-metrics"
    app: prometheus
    release: zxc
    chart: prometheus-9.3.3
    heritage: Helm
  name: zxc-prometheus-kube-state-metrics
spec:
  selector:
    matchLabels:
      component: "kube-state-metrics"
      app: prometheus
      release: zxc
  replicas: 1
  template:
    metadata:
      labels:
        component: "kube-state-metrics"
        app: prometheus
        release: zxc
        chart: prometheus-9.3.3
        heritage: Helm
    spec:
      serviceAccountName: zxc-prometheus-kube-state-metrics
      containers:
        - name: prometheus-kube-state-metrics
          image: "quay.io/coreos/kube-state-metrics:v1.6.0"
          imagePullPolicy: "IfNotPresent"
          ports:
            - name: metrics
              containerPort: 8080
          resources:
            {}
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
---
# Source: pulsar/charts/loki-stack/charts/prometheus/templates/pushgateway-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: "pushgateway"
    app: prometheus
    release: zxc
    chart: prometheus-9.3.3
    heritage: Helm
  name: zxc-prometheus-pushgateway
spec:
  selector:
    matchLabels:
      component: "pushgateway"
      app: prometheus
      release: zxc
  replicas: 1
  template:
    metadata:
      labels:
        component: "pushgateway"
        app: prometheus
        release: zxc
        chart: prometheus-9.3.3
        heritage: Helm
    spec:
      serviceAccountName: zxc-prometheus-pushgateway
      containers:
        - name: prometheus-pushgateway
          image: "prom/pushgateway:v0.8.0"
          imagePullPolicy: "IfNotPresent"
          args:
          ports:
            - containerPort: 9091
          readinessProbe:
            httpGet:
              path: /#/status
              port: 9091
            initialDelaySeconds: 10
            timeoutSeconds: 10
          resources:
            {}
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
---
# Source: pulsar/charts/loki-stack/charts/prometheus/templates/server-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: "server"
    app: prometheus
    release: zxc
    chart: prometheus-9.3.3
    heritage: Helm
  name: zxc-prometheus-server
spec:
  selector:
    matchLabels:
      component: "server"
      app: prometheus
      release: zxc
  replicas: 1
  template:
    metadata:
      labels:
        component: "server"
        app: prometheus
        release: zxc
        chart: prometheus-9.3.3
        heritage: Helm
    spec:
      serviceAccountName: zxc-prometheus-server
      containers:
        - name: prometheus-server-configmap-reload
          image: "jimmidyson/configmap-reload:v0.2.2"
          imagePullPolicy: "IfNotPresent"
          args:
            - --volume-dir=/etc/config
            - --webhook-url=http://127.0.0.1:9090/-/reload
          resources:
            {}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
              readOnly: true

        - name: prometheus-server
          image: "prom/prometheus:v2.13.1"
          imagePullPolicy: "IfNotPresent"
          args:
            - --storage.tsdb.retention.time=15d
            - --config.file=/etc/config/prometheus.yml
            - --storage.tsdb.path=/data
            - --web.console.libraries=/etc/prometheus/console_libraries
            - --web.console.templates=/etc/prometheus/consoles
            - --web.enable-lifecycle
          ports:
            - containerPort: 9090
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 9090
            initialDelaySeconds: 30
            timeoutSeconds: 30
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 9090
            initialDelaySeconds: 30
            timeoutSeconds: 30
          resources:
            {}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
            - name: storage-volume
              mountPath: /data
              subPath: ""
      securityContext:
        fsGroup: 65534
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
      terminationGracePeriodSeconds: 300
      volumes:
        - name: config-volume
          configMap:
            name: zxc-prometheus-server
        - name: storage-volume
          persistentVolumeClaim:
            claimName: zxc-prometheus-server
---
# Source: pulsar/charts/superset/templates/deployment-worker.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zxc-superset-worker
  labels:
    app: superset-worker
    chart: superset-0.1.1
    release: zxc
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: superset-worker
      release: zxc
  template:
    metadata:
      annotations:
        checksum/superset_config.py: a6a62e4c3d8f01041a3ad0e0a557840e75189f59f4e9278fb390070c0bc62ae3
        checksum/connections: a91716d6d1088e870fbe02159dc0b066dd011885aa08a22fbe60ea1cd4720f82
        checksum/extraConfigs: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
        checksum/extraSecrets: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
        checksum/extraSecretEnv: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
        checksum/configOverrides: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
        
      labels:
        app: superset-worker
        release: zxc
    spec:
      securityContext:
        runAsUser: 0
      initContainers:
      - command:
        - /bin/sh
        - -c
        - until nc -zv $DB_HOST $DB_PORT -w1; do echo 'waiting for db'; sleep 1; done
        envFrom:
        - secretRef:
            name: 'zxc-superset-env'
        image: busybox:latest
        imagePullPolicy: IfNotPresent
        name: wait-for-postgres
      containers:
        - name: superset
          image: "apache/superset:latest"
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh","-c",". /app/pythonpath/superset_bootstrap.sh; celery --app=superset.tasks.celery_app:app worker"]
          env:
            - name: "SUPERSET_PORT"
              value: "8088"
          
          envFrom:
            - secretRef:
                name: "zxc-superset-env"
          volumeMounts:
            - name: superset-config
              mountPath: "/app/pythonpath"
              readOnly: true
          resources:
            {}
      volumes:
        - name: superset-config
          secret:
            secretName: zxc-superset-config
---
# Source: pulsar/charts/superset/templates/deployment.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zxc-superset
  labels:
    app: superset
    chart: superset-0.1.1
    release: zxc
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: superset
      release: zxc
  template:
    metadata:
      annotations:
        # Force reload on config changes
        checksum/superset_config.py: a6a62e4c3d8f01041a3ad0e0a557840e75189f59f4e9278fb390070c0bc62ae3
        checksum/superset_init.sh: 39fc191eee0fed93db8b2b7921c612b0d2537b537b66633bf3b30d2672c9d399
        checksum/superset_bootstrap.sh: 1b84b7537397cd7b69ff259b05c286fc3be65937ea32034ee04272c90f06c53d
        checksum/connections: a91716d6d1088e870fbe02159dc0b066dd011885aa08a22fbe60ea1cd4720f82
        checksum/extraConfigs: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
        checksum/extraSecrets: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
        checksum/extraSecretEnv: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
        checksum/configOverrides: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
      labels:
        app: superset
        release: zxc
    spec:
      securityContext:
        runAsUser: 0
      initContainers:
      - command:
        - /bin/sh
        - -c
        - until nc -zv $DB_HOST $DB_PORT -w1; do echo 'waiting for db'; sleep 1; done
        envFrom:
        - secretRef:
            name: 'zxc-superset-env'
        image: busybox:latest
        imagePullPolicy: IfNotPresent
        name: wait-for-postgres
      containers:
        - name: superset
          image: "apache/superset:latest"
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh","-c",". /app/pythonpath/superset_bootstrap.sh; /usr/bin/docker-entrypoint.sh"]
          env:
            - name: "SUPERSET_PORT"
              value: "8088"
          
          envFrom:
            - secretRef:
                name: "zxc-superset-env"
          volumeMounts:
            - name: superset-config
              mountPath: "/app/pythonpath"
              readOnly: true
          ports:
            - name: http
              containerPort: 8088
              protocol: TCP
          resources:
            {}
      volumes:
        - name: superset-config
          secret:
            secretName: zxc-superset-config
---
# Source: pulsar/charts/loki-stack/charts/loki/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zxc-loki
  namespace: default
  labels:
    app: loki
    chart: loki-0.28.1
    release: zxc
    heritage: Helm
  annotations:
    {}
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  selector:
    matchLabels:
      app: loki
      release: zxc
  serviceName: zxc-loki-headless
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: loki
        name: loki
        release: zxc
      annotations:
        checksum/config: fd7415ed16cf338d03d203782222e11b14b3396ad11a23163f7db619a855cb40
        prometheus.io/port: http-metrics
        prometheus.io/scrape: "true"
    spec:
      serviceAccountName: zxc-loki
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      initContainers:
        []
      containers:
        - name: loki
          image: "grafana/loki:1.4.1"
          imagePullPolicy: IfNotPresent
          args:
            - "-config.file=/etc/loki/loki.yaml"
          volumeMounts:
            - name: config
              mountPath: /etc/loki
            - name: storage
              mountPath: "/data"
              subPath: 
          ports:
            - name: http-metrics
              containerPort: 3100
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 45
          readinessProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 45
          resources:
            {}
          securityContext:
            readOnlyRootFilesystem: true
          env:
      nodeSelector:
        {}
      affinity:
        {}
      tolerations:
        []
      terminationGracePeriodSeconds: 4800
      volumes:
        - name: config
          secret:
            secretName: zxc-loki
        - name: storage
          emptyDir: {}
---
# Source: pulsar/charts/superset/charts/postgresql/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zxc-postgresql
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.2.0
    app.kubernetes.io/instance: zxc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations:
spec:
  serviceName: zxc-postgresql-headless
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/instance: zxc
      role: primary
  template:
    metadata:
      name: zxc-postgresql
      labels:
        app.kubernetes.io/name: postgresql
        helm.sh/chart: postgresql-10.2.0
        app.kubernetes.io/instance: zxc
        app.kubernetes.io/managed-by: Helm
        role: primary
        app.kubernetes.io/component: primary
    spec:      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: postgresql
                    app.kubernetes.io/instance: zxc
                    app.kubernetes.io/component: primary
                namespaces:
                  - default
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      containers:
        - name: zxc-postgresql
          image: docker.io/bitnami/postgresql:11.10.0-debian-10-r24
          imagePullPolicy: "IfNotPresent"
          resources:
            requests:
              cpu: 250m
              memory: 256Mi
          securityContext:
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: POSTGRESQL_PORT_NUMBER
              value: "5432"
            - name: POSTGRESQL_VOLUME_DIR
              value: "/bitnami/postgresql"
            - name: PGDATA
              value: "/bitnami/postgresql/data"
            - name: POSTGRES_POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: zxc-postgresql
                  key: postgresql-postgres-password
            - name: POSTGRES_USER
              value: "superset"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: zxc-postgresql
                  key: postgresql-password
            - name: POSTGRES_DB
              value: "superset"
            - name: POSTGRESQL_ENABLE_LDAP
              value: "no"
            - name: POSTGRESQL_ENABLE_TLS
              value: "no"
            - name: POSTGRESQL_LOG_HOSTNAME
              value: "false"
            - name: POSTGRESQL_LOG_CONNECTIONS
              value: "false"
            - name: POSTGRESQL_LOG_DISCONNECTIONS
              value: "false"
            - name: POSTGRESQL_PGAUDIT_LOG_CATALOG
              value: "off"
            - name: POSTGRESQL_CLIENT_MIN_MESSAGES
              value: "error"
            - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
              value: "pgaudit"
          ports:
            - name: tcp-postgresql
              containerPort: 5432
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "superset" -d "dbname=superset" -h 127.0.0.1 -p 5432
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - -e
                - |
                  exec pg_isready -U "superset" -d "dbname=superset" -h 127.0.0.1 -p 5432
                  [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          volumeMounts:
            - name: dshm
              mountPath: /dev/shm
            - name: data
              mountPath: /bitnami/postgresql
              subPath: 
      volumes:
        - name: dshm
          emptyDir:
            medium: Memory
            sizeLimit: 1Gi
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
---
# Source: pulsar/charts/superset/charts/redis/templates/redis-master-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zxc-redis-master
  namespace: "default"
  labels:
    app: redis
    chart: redis-12.3.0
    release: zxc
    heritage: Helm
spec:
  selector:
    matchLabels:
      app: redis
      release: zxc
      role: master
  serviceName: zxc-redis-headless
  template:
    metadata:
      labels:
        app: redis
        chart: redis-12.3.0
        release: zxc
        role: master
      annotations:
        checksum/health: 3304f4797e28196c63b8d8080b900e035d82bc8f5e9f11a14f6e2a5b4250a490
        checksum/configmap: d410001a1d2c7e3f3ca199a198d9c6859a3340dfcd662fa90408f1c51ae253c2
        checksum/secret: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
    spec:
      
      securityContext:
        fsGroup: 1001
      serviceAccountName: default
      containers:
        - name: redis
          image: docker.io/bitnami/redis:6.0.9-debian-10-r38
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsUser: 1001
          command:
            - /bin/bash
            - -c
            - /opt/bitnami/scripts/start-scripts/start-master.sh
          env:
            - name: REDIS_REPLICATION_MODE
              value: master
            - name: ALLOW_EMPTY_PASSWORD
              value: "yes"
            - name: REDIS_TLS_ENABLED
              value: "no"
            - name: REDIS_PORT
              value: "6379"
          ports:
            - name: redis
              containerPort: 6379
          livenessProbe:
            initialDelaySeconds: 5
            periodSeconds: 5
            # One second longer than command timeout should prevent generation of zombie processes.
            timeoutSeconds: 6
            successThreshold: 1
            failureThreshold: 5
            exec:
              command:
                - sh
                - -c
                - /health/ping_liveness_local.sh 5
          readinessProbe:
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 5
            exec:
              command:
                - sh
                - -c
                - /health/ping_readiness_local.sh 1
          resources:
            null
          volumeMounts:
            - name: start-scripts
              mountPath: /opt/bitnami/scripts/start-scripts
            - name: health
              mountPath: /health
            - name: redis-data
              mountPath: /data
              subPath: 
            - name: config
              mountPath: /opt/bitnami/redis/mounted-etc
            - name: redis-tmp-conf
              mountPath: /opt/bitnami/redis/etc/
      volumes:
        - name: start-scripts
          configMap:
            name: zxc-redis-scripts
            defaultMode: 0755
        - name: health
          configMap:
            name: zxc-redis-health
            defaultMode: 0755
        - name: config
          configMap:
            name: zxc-redis
        - name: "redis-data"
          emptyDir: {}
        - name: redis-tmp-conf
          emptyDir: {}
  updateStrategy:
    type: RollingUpdate
---
# Source: pulsar/templates/bookkeeper/bookkeeper-autorecovery-statefulset.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "zxc-pulsar-recovery"
  namespace: default
  labels:
    app: pulsar
    chart: pulsar-2.8.4
    release: zxc
    heritage: Helm
    cluster: zxc-pulsar
    component: recovery
spec:
  serviceName: "zxc-pulsar-recovery"
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  # nodeSelector:
  selector:
    matchLabels:
      app: pulsar
      release: zxc
      component: recovery
  template:
    metadata:
      labels:
        app: pulsar
        release: zxc
        cluster: zxc-pulsar
        component: recovery
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        checksum/config: be167a3583f47db5824acf92afd3c4bf8834c7213d17824fac48d6dcb271af11
    spec:
      securityContext:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: "app"
                      operator: In
                      values:
                      - "pulsar"
                    - key: "release"
                      operator: In
                      values:
                      - zxc
                    - key: "component"
                      operator: In
                      values:
                      - recovery
                topologyKey: "kubernetes.io/hostname"
          
      terminationGracePeriodSeconds: 30
      initContainers:
      # This initContainer will wait for bookkeeper initnewcluster to complete
      # before deploying the bookies
      - name: pulsar-bookkeeper-verify-clusterid
        image: "streamnative/pulsar-all:2.7.2.8"
        imagePullPolicy: IfNotPresent
        command: ["sh", "-c"]
        args:
        - >
          bin/apply-config-from-env.py conf/bookkeeper.conf;
          /pulsar/keytool/keytool.sh autorecovery ${HOSTNAME}.zxc-pulsar-recovery.default.svc.cluster.local true;until bin/bookkeeper shell whatisinstanceid; do
            sleep 3;
          done;
        envFrom:
        - configMapRef:
            name: "zxc-pulsar-recovery"
        volumeMounts:
        
        - name: autorecovery-certs
          mountPath: "/pulsar/certs/autorecovery"
          readOnly: true
        - name: ca
          mountPath: "/pulsar/certs/ca"
          readOnly: true
        - name: keytool
          mountPath: "/pulsar/keytool/keytool.sh"
          subPath: keytool.sh
      containers:
      - name: "zxc-pulsar-recovery"
        image: "streamnative/pulsar-all:2.7.2.8"
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: 0.05
            memory: 64Mi
        command: ["sh", "-c"]
        args:
        - >
          bin/apply-config-from-env.py conf/bookkeeper.conf;
          
          /pulsar/keytool/keytool.sh autorecovery ${HOSTNAME}.zxc-pulsar-recovery.default.svc.cluster.local true;
          bin/bookkeeper autorecovery
        ports:
        - name: http
          containerPort: 8000
        envFrom:
        - configMapRef:
            name: "zxc-pulsar-recovery"
        env:
        volumeMounts:
        
        - name: autorecovery-certs
          mountPath: "/pulsar/certs/autorecovery"
          readOnly: true
        - name: ca
          mountPath: "/pulsar/certs/ca"
          readOnly: true
        - name: keytool
          mountPath: "/pulsar/keytool/keytool.sh"
          subPath: keytool.sh
        - name: "zxc-pulsar-recovery-log4j2"
          mountPath: "/pulsar/conf/log4j2.yaml"
          subPath: log4j2.yaml
      volumes:
      
      - name: autorecovery-certs
        secret:
          secretName: "zxc-tls-recovery"
          items:
          - key: tls.crt
            path: tls.crt
          - key: tls.key
            path: tls.key
      - name: ca
        secret:
          secretName: "zxc-ca-tls"
          items:
          - key: ca.crt
            path: ca.crt
      - name: keytool
        configMap:
          name: "zxc-pulsar-keytool-configmap"
          defaultMode: 0755
      - name: "zxc-pulsar-recovery-log4j2"
        configMap:
          name: "zxc-pulsar-recovery"
---
# Source: pulsar/templates/bookkeeper/bookkeeper-statefulset.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "zxc-pulsar-bookie"
  namespace: default
  labels:
    app: pulsar
    chart: pulsar-2.8.4
    release: zxc
    heritage: Helm
    cluster: zxc-pulsar
    component: bookie
spec:
  serviceName: "zxc-pulsar-bookie"
  replicas: 4
  selector:
    matchLabels:
      app: pulsar
      release: zxc
      component: bookie
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: pulsar
        release: zxc
        cluster: zxc-pulsar
        component: bookie
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        checksum/config: ba551b2fc4f5e7a528bf4c60b819054e049c97c0be50545948b8df48328d8551
    spec:
      securityContext:
      serviceAccountName: zxc-pulsar-bookie-acct  
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: "app"
                      operator: In
                      values:
                      - "pulsar"
                    - key: "release"
                      operator: In
                      values:
                      - zxc
                    - key: "component"
                      operator: In
                      values:
                      - bookie
                topologyKey: "kubernetes.io/hostname"
          
      terminationGracePeriodSeconds: 30
      initContainers:
      # This initContainer will wait for bookkeeper initnewcluster to complete
      # before deploying the bookies
      - name: pulsar-bookkeeper-verify-clusterid
        image: "streamnative/pulsar-all:2.7.2.8"
        imagePullPolicy: IfNotPresent
        command: ["sh", "-c"]
        args:
        # only reformat bookie if bookkeeper is running without persistence
        - >
          
          set -e;
          bin/apply-config-from-env.py conf/bookkeeper.conf;
          /pulsar/keytool/keytool.sh bookie ${HOSTNAME}.zxc-pulsar-bookie.default.svc.cluster.local true;until bin/bookkeeper shell whatisinstanceid; do
            sleep 3;
          done;
        envFrom:
        - configMapRef:
            name: "zxc-pulsar-bookie"
        volumeMounts:
        
        - name: bookie-certs
          mountPath: "/pulsar/certs/bookie"
          readOnly: true
        - name: ca
          mountPath: "/pulsar/certs/ca"
          readOnly: true
        - name: keytool
          mountPath: "/pulsar/keytool/keytool.sh"
          subPath: keytool.sh
      containers:
      - name: "zxc-pulsar-bookie"
        image: "streamnative/pulsar-all:2.7.2.8"
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /api/v1/bookie/state
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 30
          failureThreshold: 60
        readinessProbe:
          httpGet:
            path: /api/v1/bookie/is_ready
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 30
          failureThreshold: 60
        resources:
          requests:
            cpu: 0.2
            memory: 512Mi
        command: ["bash", "-c"]
        args:
        - >
          bin/apply-config-from-env.py conf/bookkeeper.conf;
          
          /pulsar/keytool/keytool.sh bookie ${HOSTNAME}.zxc-pulsar-bookie.default.svc.cluster.local true;
          bin/pulsar bookie;
        ports:
        - name: bookie
          containerPort: 3181
        - name: http
          containerPort: 8000
        envFrom:
        - configMapRef:
            name: "zxc-pulsar-bookie"
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: VOLUME_NAME
          value: "zxc-pulsar-bookie-journal"
        - name: BOOKIE_PORT
          value: "3181"
        - name: BOOKIE_RACK_AWARE_ENABLED
          value: "true"
        volumeMounts:
        - name: "zxc-pulsar-bookie-journal"
          mountPath: /pulsar/data/bookkeeper/journal
        - name: "zxc-pulsar-bookie-ledgers"
          mountPath: /pulsar/data/bookkeeper/ledgers
        
        - name: bookie-certs
          mountPath: "/pulsar/certs/bookie"
          readOnly: true
        - name: ca
          mountPath: "/pulsar/certs/ca"
          readOnly: true
        - name: keytool
          mountPath: "/pulsar/keytool/keytool.sh"
          subPath: keytool.sh
        - name: "zxc-pulsar-bookie-log4j2"
          mountPath: "/pulsar/conf/log4j2.yaml"
          subPath: log4j2.yaml
      volumes:
      
      - name: bookie-certs
        secret:
          secretName: "zxc-tls-bookie"
          items:
          - key: tls.crt
            path: tls.crt
          - key: tls.key
            path: tls.key
      - name: ca
        secret:
          secretName: "zxc-ca-tls"
          items:
          - key: ca.crt
            path: ca.crt
      - name: keytool
        configMap:
          name: "zxc-pulsar-keytool-configmap"
          defaultMode: 0755
      - name: "zxc-pulsar-bookie-log4j2"
        configMap:
          name: "zxc-pulsar-bookie"
  volumeClaimTemplates:
  - metadata:
      name: "zxc-pulsar-bookie-journal"
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi
      
  - metadata:
      name: "zxc-pulsar-bookie-ledgers"
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 50Gi
---
# Source: pulsar/templates/broker/broker-statefulset.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "zxc-pulsar-broker"
  namespace: default
  labels:
    app: pulsar
    chart: pulsar-2.8.4
    release: zxc
    heritage: Helm
    cluster: zxc-pulsar
    component: broker
spec:
  serviceName: "zxc-pulsar-broker"
  replicas: 3
  selector:
    matchLabels:
      app: pulsar
      release: zxc
      component: broker
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: pulsar
        release: zxc
        cluster: zxc-pulsar
        component: broker
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        checksum/config: 299ec934ee87291a31e1df701d2dfc824fb57deff15a525ee146e7b2995542eb
    spec:
      securityContext:
      serviceAccountName: zxc-pulsar-broker-acct  
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: "app"
                      operator: In
                      values:
                      - "pulsar"
                    - key: "release"
                      operator: In
                      values:
                      - zxc
                    - key: "component"
                      operator: In
                      values:
                      - broker
                topologyKey: "kubernetes.io/hostname"
          
      terminationGracePeriodSeconds: 30
      initContainers:
      # This init container will wait for zookeeper to be ready before
      # deploying the bookies
      - name: wait-zookeeper-ready
        image: "streamnative/sn-pulsar:2.8.0.8"
        imagePullPolicy: IfNotPresent
        command: ["sh", "-c"]
        args:
          
          - >-
            
            export BROKER_ADDRESS="${HOSTNAME}.zxc-pulsar-broker.default.svc.cluster.local"
            
            /pulsar/keytool/keytool.sh broker ${BROKER_ADDRESS} true;
            until bin/bookkeeper org.apache.zookeeper.ZooKeeperMain -server zxc-pulsar-zookeeper:2281 get /admin/clusters/zxc-pulsar; do
              echo "pulsar cluster zxc-pulsar isn't initialized yet ... check in 3 seconds ..." && sleep 3;
            done;
            
            
        volumeMounts:
        
        - name: broker-certs
          mountPath: "/pulsar/certs/broker"
          readOnly: true
        - name: ca
          mountPath: "/pulsar/certs/ca"
          readOnly: true
        - name: keytool
          mountPath: "/pulsar/keytool/keytool.sh"
          subPath: keytool.sh
      # This init container will wait for bookkeeper to be ready before
      # deploying the broker
      - name: wait-bookkeeper-ready
        image: "streamnative/sn-pulsar:2.8.0.8"
        imagePullPolicy: IfNotPresent
        command: ["sh", "-c"]
        args:
          
          - >
            export BROKER_ADDRESS="${HOSTNAME}.zxc-pulsar-broker.default.svc.cluster.local"
            
            /pulsar/keytool/keytool.sh broker ${BROKER_ADDRESS} true;
            bin/apply-config-from-env.py conf/bookkeeper.conf;
            until bin/bookkeeper shell whatisinstanceid; do
              echo "bookkeeper cluster is not initialized yet. backoff for 3 seconds ...";
              sleep 3;
            done;
            echo "bookkeeper cluster is already initialized";
            bookieServiceNumber="$(nslookup -timeout=10 zxc-pulsar-bookie | grep Name | wc -l)";
            until [ ${bookieServiceNumber} -ge 3 ]; do
              echo "bookkeeper cluster zxc-pulsar isn't ready yet ... check in 10 seconds ...";
              sleep 10;
              bookieServiceNumber="$(nslookup -timeout=10 zxc-pulsar-bookie | grep Name | wc -l)";
            done;
            echo "bookkeeper cluster is ready";
          
        envFrom:
          - configMapRef:
              name: "zxc-pulsar-bookie"
        volumeMounts:
          
          - name: broker-certs
            mountPath: "/pulsar/certs/broker"
            readOnly: true
          - name: ca
            mountPath: "/pulsar/certs/ca"
            readOnly: true
          - name: keytool
            mountPath: "/pulsar/keytool/keytool.sh"
            subPath: keytool.sh
      containers:
      - name: "zxc-pulsar-broker"
        image: "streamnative/sn-pulsar:2.8.0.8"
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /status.html
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          failureThreshold: 10
        readinessProbe:
          httpGet:
            path: /status.html
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          failureThreshold: 10
        resources:
          requests:
            cpu: 0.2
            memory: 512Mi
        command: ["sh", "-c"]
        args:
        # NOTE: We need to set `BROKER_ADDRESS` at the beginning. Because
        # other scripts will use this variable.
        
        - >
          export BROKER_ADDRESS="${HOSTNAME}.zxc-pulsar-broker.default.svc.cluster.local"
          
          bin/apply-config-from-env.py conf/broker.conf;
          echo "OK" > status;
          
          /pulsar/keytool/keytool.sh broker ${BROKER_ADDRESS} true;
          BROKER_ZNODE="/loadbalance/brokers/${BROKER_ADDRESS}:8080"
          bin/pulsar zookeeper-shell -server zxc-pulsar-zookeeper:2281 get ${BROKER_ZNODE};
          while [ $? -eq 0 ]; do
            echo "broker ${BROKER_ADDRESS} znode still exists ... check in 10 seconds ...";
            sleep 10;
            bin/pulsar zookeeper-shell -server zxc-pulsar-zookeeper:2281 get ${BROKER_ZNODE};
          done;
          bin/pulsar broker;
        
        ports:
        # prometheus needs to access /metrics endpoint
        - name: http
          containerPort: 8080
        - name: https
          containerPort: 8443
        - name: pulsarssl
          containerPort: 6651
        env:
        envFrom:
        - configMapRef:
            name: "zxc-pulsar-broker"
        volumeMounts:
          
          - name: "zxc-pulsar-broker-log4j2"
            mountPath: "/pulsar/conf/log4j2.yaml"
            subPath: log4j2.yaml
          
          - name: broker-certs
            mountPath: "/pulsar/certs/broker"
            readOnly: true
          - name: ca
            mountPath: "/pulsar/certs/ca"
            readOnly: true
          - name: keytool
            mountPath: "/pulsar/keytool/keytool.sh"
            subPath: keytool.sh
          
          
          
          - name: "function-worker-config"
            mountPath: "/pulsar/conf/functions_worker.yml"
            subPath: functions_worker.yml
      volumes:
      
      
      - name: broker-certs
        secret:
          secretName: "zxc-tls-broker"
          items:
          - key: tls.crt
            path: tls.crt
          - key: tls.key
            path: tls.key
      - name: ca
        secret:
          secretName: "zxc-ca-tls"
          items:
          - key: ca.crt
            path: ca.crt
      - name: keytool
        configMap:
          name: "zxc-pulsar-keytool-configmap"
          defaultMode: 0755
      - name: "zxc-pulsar-broker-log4j2"
        configMap:
          name: "zxc-pulsar-broker"
      
      
      
      - name: "function-worker-config"
        configMap:
          name: "zxc-pulsar-functions-worker-configfile"
---
# Source: pulsar/templates/proxy/proxy-statefulset.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "zxc-pulsar-proxy"
  namespace: default
  labels:
    app: pulsar
    chart: pulsar-2.8.4
    release: zxc
    heritage: Helm
    cluster: zxc-pulsar
    component: proxy
spec:
  serviceName: "zxc-pulsar-proxy"
  replicas: 3
  selector:
    matchLabels:
      app: pulsar
      release: zxc
      component: proxy
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: pulsar
        release: zxc
        cluster: zxc-pulsar
        component: proxy
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        checksum/config: 9467e7048beb9cf65e515aa0ce4f9610f59c6dbf5ae71548352c7cc824c24cfa
    spec:
      securityContext:
      serviceAccountName: zxc-pulsar-proxy-acct
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: "app"
                      operator: In
                      values:
                      - "pulsar"
                    - key: "release"
                      operator: In
                      values:
                      - zxc
                    - key: "component" 
                      operator: In
                      values:
                      - proxy
                topologyKey: "kubernetes.io/hostname"
          
      terminationGracePeriodSeconds: 30
      initContainers:
      # This init container will wait for zookeeper to be ready before
      # deploying the bookies
      - name: wait-zookeeper-ready
        image: "streamnative/sn-pulsar:2.8.0.8"
        imagePullPolicy: IfNotPresent
        command: ["sh", "-c"]
        args:
          
          - >-
            
            until bin/pulsar zookeeper-shell -server zxc-pulsar-zookeeper get /admin/clusters/zxc-pulsar; do
              sleep 3;
            done;
            
          
      # This init container will wait for at least one broker to be ready before
      # deploying the proxy
      - name: wait-broker-ready
        image: "streamnative/sn-pulsar:2.8.0.8"
        imagePullPolicy: IfNotPresent
        command: ["sh", "-c"]
        args:
           
          - >-
            set -e;
            brokerServiceNumber="$(nslookup -timeout=10 zxc-pulsar-broker | grep Name | wc -l)";
            until [ ${brokerServiceNumber} -ge 1 ]; do
              echo "pulsar cluster zxc-pulsar isn't initialized yet ... check in 10 seconds ...";
              sleep 10;
              brokerServiceNumber="$(nslookup -timeout=10 zxc-pulsar-broker | grep Name | wc -l)";
            done;
          
      containers:
      - name: "zxc-pulsar-proxy"
        image: "streamnative/sn-pulsar:2.8.0.8"
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /status.html
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          failureThreshold: 10
        readinessProbe:
          httpGet:
            path: /status.html
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          failureThreshold: 10
        resources:
          requests:
            cpu: 0.2
            memory: 128Mi
        command: ["sh", "-c"]
        args:
        
        - >
          bin/apply-config-from-env.py conf/proxy.conf;
          echo "OK" > status;
          bin/pulsar proxy;
        
        ports:
        # prometheus needs to access /metrics endpoint
        - name: http
          containerPort: 8080
        - name: https
          containerPort: 443
        - name: pulsarssl
          containerPort: 6651
        envFrom:
        - configMapRef:
            name: "zxc-pulsar-proxy"
        env:
        volumeMounts:
          - name: "zxc-pulsar-proxy-log4j2"
            mountPath: "/pulsar/conf/log4j2.yaml"
            subPath: log4j2.yaml
          
          
          - mountPath: "/pulsar/certs/proxy"
            name: proxy-certs
            readOnly: true
          - mountPath: "/pulsar/certs/ca"
            name: proxy-ca
            readOnly: true
          - mountPath: "/pulsar/certs/broker"
            name: broker-ca
            readOnly: true
      volumes:
        - name: "zxc-pulsar-proxy-log4j2"
          configMap:
            name: "zxc-pulsar-proxy"
        
        
        - name: proxy-ca
          secret:
            secretName: "zxc-ca-tls"
            items:
              - key: ca.crt
                path: ca.crt
        - name: proxy-certs
          secret:
            secretName: "zxc-tls-proxy"
            items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
        - name: broker-ca
          secret:
            secretName: "zxc-ca-tls"
            items:
              - key: ca.crt
                path: ca.crt
---
# Source: pulsar/templates/toolset/toolset-statefulset.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "zxc-pulsar-toolset"
  namespace: default
  labels:
    app: pulsar
    chart: pulsar-2.8.4
    release: zxc
    heritage: Helm
    cluster: zxc-pulsar
    component: toolset
spec:
  serviceName: "zxc-pulsar-toolset"
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      app: pulsar
      release: zxc
      component: toolset
  template:
    metadata:
      labels:
        app: pulsar
        release: zxc
        cluster: zxc-pulsar
        component: toolset
      annotations:
        checksum/config: 7a6027cc9abe29902daf1206e2001bd1cd1b52ae409f7516504f0fb74f952c5f
    spec:
      terminationGracePeriodSeconds: 0
      containers:
      - name: "pulsar"
        
        image: "streamnative/sn-pulsar:2.8.0.8"
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: 0.1
            memory: 256Mi
        command: ["sh", "-c"]
        args:
        - >
          bin/apply-config-from-env.py conf/client.conf;
          bin/apply-config-from-env.py conf/bookkeeper.conf;
          
          /pulsar/keytool/keytool.sh toolset ${HOSTNAME}.zxc-pulsar-toolset.default.svc.cluster.local true;
          echo "Configuring pulsarctl context ...";
          mkdir -p /root/.config/pulsar;
          cp /pulsar/conf/pulsarctl.config /root/.config/pulsar/config;
          echo "Successfully configured pulsarctl context.";
          sleep 10000000000
        envFrom:
        - configMapRef:
            name: "zxc-pulsar-toolset"
        volumeMounts:
        
        - name: toolset-certs
          mountPath: "/pulsar/certs/toolset"
          readOnly: true
        - name: ca
          mountPath: "/pulsar/certs/ca"
          readOnly: true
        - name: keytool
          mountPath: "/pulsar/keytool/keytool.sh"
          subPath: keytool.sh
        - mountPath: "/pulsar/certs/proxy-ca"
          name: proxy-ca
          readOnly: true
        
        - name: "zxc-pulsar-toolset-log4j2"
          mountPath: "/pulsar/conf/log4j2.yaml"
          subPath: log4j2.yaml
        - name: "zxc-pulsar-toolset-pulsarctl"
          mountPath: "/pulsar/conf/pulsarctl.config"
          subPath: pulsarctl.config
      volumes:
      
      - name: toolset-certs
        secret:
          secretName: "zxc-tls-toolset"
          items:
          - key: tls.crt
            path: tls.crt
          - key: tls.key
            path: tls.key
      - name: ca
        secret:
          secretName: "zxc-ca-tls"
          items:
          - key: ca.crt
            path: ca.crt
      - name: keytool
        configMap:
          name: "zxc-pulsar-keytool-configmap"
          defaultMode: 0755
      - name: proxy-ca
        secret:
          secretName: "zxc-ca-tls"
          items:
            - key: ca.crt
              path: ca.crt
      
      - name: "zxc-pulsar-toolset-log4j2"
        configMap:
          name: "zxc-pulsar-toolset"
      
      - name: "zxc-pulsar-toolset-pulsarctl"
        configMap:
          name: "zxc-pulsar-toolset"
---
# Source: pulsar/templates/zookeeper/zookeeper-statefulset.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

# deploy zookeeper only when `components.zookeeper` is true
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "zxc-pulsar-zookeeper"
  namespace: default
  labels:
    app: pulsar
    chart: pulsar-2.8.4
    release: zxc
    heritage: Helm
    cluster: zxc-pulsar
    component: zookeeper
spec:
  serviceName: "zxc-pulsar-zookeeper"
  replicas: 3
  selector:
    matchLabels:
      app: pulsar
      release: zxc
      component: zookeeper
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: OrderedReady
  template:
    metadata:
      labels:
        app: pulsar
        release: zxc
        cluster: zxc-pulsar
        component: zookeeper
      annotations:
        checksum/config: aa1565e6b3f050b870d7354491a00791a4f49b052331073580701707aea5dc48
        prometheus.io/port: "8000"
        prometheus.io/scrape: "true"
    spec:
      securityContext:
      serviceAccountName: zxc-pulsar-restore-acct  
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: "app"
                      operator: In
                      values:
                      - "pulsar"
                    - key: "release"
                      operator: In
                      values:
                      - zxc
                    - key: "component"
                      operator: In
                      values:
                      - zookeeper
                topologyKey: "kubernetes.io/hostname"
          
      terminationGracePeriodSeconds: 30
      initContainers:
      containers:
      - name: "zxc-pulsar-zookeeper"
        image: "streamnative/pulsar-all:2.7.2.8"
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: 0.1
            memory: 256Mi
        command: ["sh", "-c"]
        args:
        - >
          bin/apply-config-from-env.py conf/zookeeper.conf;
          
          /pulsar/keytool/keytool.sh zookeeper ${HOSTNAME}.zxc-pulsar-zookeeper.default.svc.cluster.local false;
          bin/gen-zk-conf.sh conf/zookeeper.conf 0 participant;
          cat conf/zookeeper.conf;
          bin/pulsar zookeeper;
        ports:
        - name: metrics
          containerPort: 8000
        - name: client
          containerPort: 2181
        - name: follower
          containerPort: 2888
        - name: leader-election
          containerPort: 3888
        - name: client-tls
          containerPort: 2281
        env:
        - name: ZOOKEEPER_SERVERS
          value:
            zxc-pulsar-zookeeper-0,zxc-pulsar-zookeeper-1,zxc-pulsar-zookeeper-2
        envFrom:
        - configMapRef:
            name: "zxc-pulsar-zookeeper"
        readinessProbe:
          exec:
            command:
            - bin/pulsar-zookeeper-ruok.sh
          initialDelaySeconds: 10
          periodSeconds: 30
          failureThreshold: 10
        livenessProbe:
          exec:
            command:
            - bin/pulsar-zookeeper-ruok.sh
          initialDelaySeconds: 10
          periodSeconds: 30
          failureThreshold: 10
        volumeMounts:
        
        - name: "zxc-pulsar-zookeeper-data"
          mountPath: "/pulsar/data"
        
        - mountPath: "/pulsar/certs/zookeeper"
          name: zookeeper-certs
          readOnly: true
        - mountPath: "/pulsar/certs/ca"
          name: ca
          readOnly: true
        - name: keytool
          mountPath: "/pulsar/keytool/keytool.sh"
          subPath: keytool.sh
        - name: "zxc-pulsar-zookeeper-log4j2"
          mountPath: "/pulsar/conf/log4j2.yaml"
          subPath: log4j2.yaml
        - name: "zxc-pulsar-zookeeper-genzkconf"
          mountPath: "/pulsar/bin/gen-zk-conf.sh"
          subPath: gen-zk-conf.sh
      volumes:
      
      
      - name: zookeeper-certs
        secret:
          secretName: "zxc-tls-zookeeper"
          items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
      - name: ca
        secret:
          secretName: "zxc-ca-tls"
          items:
            - key: ca.crt
              path: ca.crt
      - name: keytool
        configMap:
          name: "zxc-pulsar-keytool-configmap"
          defaultMode: 0755
      - name: "zxc-pulsar-zookeeper-log4j2"
        configMap:
          name: "zxc-pulsar-zookeeper"
      - name: "zxc-pulsar-zookeeper-genzkconf"
        configMap:
          name: "zxc-pulsar-genzkconf-configmap"
          defaultMode: 0755
  volumeClaimTemplates:
  
  - metadata:
      name: "zxc-pulsar-zookeeper-data"
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 50Gi
---
# Source: pulsar/templates/bookkeeper/bookkeeper-cluster-initialize.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
apiVersion: batch/v1
kind: Job
metadata:
  name: "zxc-pulsar-bookie-init"
  namespace: default
  labels:
    app: pulsar
    chart: pulsar-2.8.4
    release: zxc
    heritage: Helm
    cluster: zxc-pulsar
    component: "bookie-init"
spec:
  template:
    spec:
      initContainers:
      - name: wait-zookeeper-ready
        image: "streamnative/pulsar-all:2.7.2.8"
        imagePullPolicy: IfNotPresent
        command: ["sh", "-c"]
        args:
          - >-
            until nslookup zxc-pulsar-zookeeper-2.zxc-pulsar-zookeeper.default; do
              sleep 3;
            done;
      containers:
      - name: "zxc-pulsar-bookie-init"
        image: "streamnative/pulsar-all:2.7.2.8"
        imagePullPolicy: IfNotPresent
        command: ["sh", "-c"]
        args:
          - >
            bin/apply-config-from-env.py conf/bookkeeper.conf;
            
            /pulsar/keytool/keytool.sh toolset ${HOSTNAME}.zxc-pulsar-toolset.default.svc.cluster.local true;
            if bin/bookkeeper shell whatisinstanceid; then
                echo "bookkeeper cluster already initialized";
            else
                bin/bookkeeper shell initnewcluster;
            fi
        envFrom:
        - configMapRef:
            name: "zxc-pulsar-bookie"
        volumeMounts:
        
        - name: toolset-certs
          mountPath: "/pulsar/certs/toolset"
          readOnly: true
        - name: ca
          mountPath: "/pulsar/certs/ca"
          readOnly: true
        - name: keytool
          mountPath: "/pulsar/keytool/keytool.sh"
          subPath: keytool.sh
        - mountPath: "/pulsar/certs/proxy-ca"
          name: proxy-ca
          readOnly: true
      volumes:
      
      - name: toolset-certs
        secret:
          secretName: "zxc-tls-toolset"
          items:
          - key: tls.crt
            path: tls.crt
          - key: tls.key
            path: tls.key
      - name: ca
        secret:
          secretName: "zxc-ca-tls"
          items:
          - key: ca.crt
            path: ca.crt
      - name: keytool
        configMap:
          name: "zxc-pulsar-keytool-configmap"
          defaultMode: 0755
      - name: proxy-ca
        secret:
          secretName: "zxc-ca-tls"
          items:
            - key: ca.crt
              path: ca.crt
      restartPolicy: Never
---
# Source: pulsar/templates/pulsar-cluster-initialize.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
apiVersion: batch/v1
kind: Job
metadata:
  name: "zxc-pulsar-pulsar-init"
  namespace: default
  labels:
    app: pulsar
    chart: pulsar-2.8.4
    release: zxc
    heritage: Helm
    cluster: zxc-pulsar
    component: pulsar-init
spec:
  template:
    spec:
      initContainers:
      - name: wait-zookeeper-ready
        image: "streamnative/pulsar-all:2.7.1.3"
        imagePullPolicy: IfNotPresent
        command: ["sh", "-c"]
        args:
          - >-
            until nslookup zxc-pulsar-zookeeper-2.zxc-pulsar-zookeeper.default; do
              sleep 3;
            done;
      # This initContainer will wait for bookkeeper initnewcluster to complete
      # before initializing pulsar metadata
      - name: pulsar-bookkeeper-verify-clusterid
        image: "streamnative/pulsar-all:2.7.1.3"
        imagePullPolicy: IfNotPresent
        command: ["sh", "-c"]
        args:
        - >
          bin/apply-config-from-env.py conf/bookkeeper.conf;
          
          /pulsar/keytool/keytool.sh toolset ${HOSTNAME}.zxc-pulsar-toolset.default.svc.cluster.local true;
          until bin/bookkeeper shell whatisinstanceid; do
            sleep 3;
          done;
        envFrom:
        - configMapRef:
            name: "zxc-pulsar-bookie"
        volumeMounts:
        
        - name: toolset-certs
          mountPath: "/pulsar/certs/toolset"
          readOnly: true
        - name: ca
          mountPath: "/pulsar/certs/ca"
          readOnly: true
        - name: keytool
          mountPath: "/pulsar/keytool/keytool.sh"
          subPath: keytool.sh
        - mountPath: "/pulsar/certs/proxy-ca"
          name: proxy-ca
          readOnly: true
      containers:
      - name: "zxc-pulsar-pulsar-init"
        image: "streamnative/pulsar-all:2.7.1.3"
        imagePullPolicy: IfNotPresent
        command: ["sh", "-c"]
        args:
          - >
            
            /pulsar/keytool/keytool.sh toolset ${HOSTNAME}.zxc-pulsar-toolset.default.svc.cluster.local true;
            bin/pulsar initialize-cluster-metadata \
              --cluster zxc-pulsar \
              --zookeeper zxc-pulsar-zookeeper:2281 \
              --configuration-store zxc-pulsar-zookeeper:2281 \
              --web-service-url http://zxc-pulsar-broker.default.svc.cluster.local:8080/ \
              --web-service-url-tls https://zxc-pulsar-broker.default.svc.cluster.local:8443/ \
              --broker-service-url pulsar://zxc-pulsar-broker.default.svc.cluster.local:6650/ \
              --broker-service-url-tls pulsar+ssl://zxc-pulsar-broker.default.svc.cluster.local:6651/ || true;
        volumeMounts:
        
        - name: toolset-certs
          mountPath: "/pulsar/certs/toolset"
          readOnly: true
        - name: ca
          mountPath: "/pulsar/certs/ca"
          readOnly: true
        - name: keytool
          mountPath: "/pulsar/keytool/keytool.sh"
          subPath: keytool.sh
        - mountPath: "/pulsar/certs/proxy-ca"
          name: proxy-ca
          readOnly: true
      volumes:
      
      - name: toolset-certs
        secret:
          secretName: "zxc-tls-toolset"
          items:
          - key: tls.crt
            path: tls.crt
          - key: tls.key
            path: tls.key
      - name: ca
        secret:
          secretName: "zxc-ca-tls"
          items:
          - key: ca.crt
            path: ca.crt
      - name: keytool
        configMap:
          name: "zxc-pulsar-keytool-configmap"
          defaultMode: 0755
      - name: proxy-ca
        secret:
          secretName: "zxc-ca-tls"
          items:
            - key: ca.crt
              path: ca.crt
      restartPolicy: Never
---
# Source: pulsar/charts/superset/templates/configmap-superset.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
# Source: pulsar/charts/superset/templates/ingress.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
# Source: pulsar/templates/bookkeeper/bookkeeper-role-binding.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
---
# Source: pulsar/templates/bookkeeper/bookkeeper-storageclass.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
---
# Source: pulsar/templates/broker/broker-istio-gateway.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
---
# Source: pulsar/templates/broker/broker-istio-serviceentries.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
---
# Source: pulsar/templates/broker/broker-istio-virtualservice.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
---
# Source: pulsar/templates/broker/broker-role-binding.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
---
# Source: pulsar/templates/broker/broker-service-ingress.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
---
# Source: pulsar/templates/function-worker/function-worker-cluster-role-binding.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
---
# Source: pulsar/templates/function-worker/function-worker-role-binding.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
---
# Source: pulsar/templates/function-worker/function-worker-service-account.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
---
# Source: pulsar/templates/function-worker/function-worker-service.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
---
# Source: pulsar/templates/function-worker/function-worker-statefulset.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
---
# Source: pulsar/templates/namespace.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
---
# Source: pulsar/templates/proxy/proxy-service-ingress.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
---
# Source: pulsar/templates/proxy/websocket-configmap.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
---
# Source: pulsar/templates/tls/tls-cert-public-issuer.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
---
# Source: pulsar/templates/tls/tls-certs-public.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
---
# Source: pulsar/templates/zookeeper/zookeeper-backup-clusterrolebinding.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
---
# Source: pulsar/templates/zookeeper/zookeeper-backup-configmap.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

# deploy zookeeper only when `zookeeper.customTools.backup.enable` is true
---
# Source: pulsar/templates/zookeeper/zookeeper-backup-rolebinding.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
---
# Source: pulsar/templates/zookeeper/zookeeper-backup-service.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

# deploy zookeeper only when `zookeeper.customTools.backup.enable` is true
---
# Source: pulsar/templates/zookeeper/zookeeper-backup-statefulset.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

# deploy zookeeper only when `zookeeper.customTools.backup.enable` is true
---
# Source: pulsar/templates/zookeeper/zookeeper-restore-clusterrolebinding.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
---
# Source: pulsar/templates/zookeeper/zookeeper-restore-configmap.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

# deploy zookeeper only when `zookeeper.customTools.restore.enable` is true
---
# Source: pulsar/templates/zookeeper/zookeeper-restore-rolebinding.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
---
# Source: pulsar/templates/zookeeper/zookeeper-storageclass.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

# deploy zookeeper only when `components.zookeeper` is true

# define the storage class for data directory
---
# Source: pulsar/templates/zookeeper/zookeeper-storageclass.yaml
# define the storage class for dataLog directory
---
# Source: pulsar/templates/tls/tls-cert-internal-issuer.yaml
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: "zxc-pulsar-ca"
  namespace: default
spec:
  secretName: "zxc-ca-tls"
  commonName: "default.svc.cluster.local"
  usages:
    - server auth
    - client auth
  isCA: true
  issuerRef:
    name: "zxc-pulsar-internal-cert-issuer"
    # We can reference ClusterIssuers by changing the kind here.
    # The default value is Issuer (i.e. a locally namespaced Issuer)
    kind: Issuer
    # This is optional since cert-manager will default to this value however
    # if you are using an external issuer, change this to that issuer group.
    group: cert-manager.io
---
# Source: pulsar/templates/tls/tls-certs-internal.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
# only configure issue private certicate for proxy when public_issuer is not used
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: "zxc-pulsar-tls-proxy"
  namespace: default
spec:
  # Secret names are always required.
  secretName: "zxc-tls-proxy"
  duration: "2160h"
  renewBefore: "360h"
  organization:
  - pulsar
  # The use of the common name field has been deprecated since 2000 and is
  # discouraged from being used.
  commonName: "zxc-pulsar-proxy"
  isCA: false
  keySize: 4096
  keyAlgorithm: rsa
  keyEncoding: pkcs8
  usages:
    - server auth
    - client auth
  # At least one of a DNS Name, USI SAN, or IP address is required.
  dnsNames:
    -  "*.zxc-pulsar-proxy.default.svc.cluster.local"
    -  "zxc-pulsar-proxy"
  # Issuer references are always required.
  issuerRef:
    name: "zxc-pulsar-internal-cert-issuer-ca-issuer"
    # We can reference ClusterIssuers by changing the kind here.
    # The default value is Issuer (i.e. a locally namespaced Issuer)
    kind: Issuer
    # This is optional since cert-manager will default to this value however
    # if you are using an external issuer, change this to that issuer group.
    group: cert-manager.io
---
# Source: pulsar/templates/tls/tls-certs-internal.yaml
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: "zxc-pulsar-tls-broker"
  namespace: default
spec:
  # Secret names are always required.
  secretName: "zxc-tls-broker"
  duration: "2160h"
  renewBefore: "360h"
  organization:
  - pulsar
  # The use of the common name field has been deprecated since 2000 and is
  # discouraged from being used.
  commonName: "zxc-pulsar-broker"
  isCA: false
  keySize: 4096
  keyAlgorithm: rsa
  keyEncoding: pkcs8
  usages:
    - server auth
    - client auth
  # At least one of a DNS Name, USI SAN, or IP address is required.
  dnsNames:
    -  "*.zxc-pulsar-broker.default.svc.cluster.local"
    -  "zxc-pulsar-broker"
  # Issuer references are always required.
  issuerRef:
    name: "zxc-pulsar-internal-cert-issuer-ca-issuer"
    # We can reference ClusterIssuers by changing the kind here.
    # The default value is Issuer (i.e. a locally namespaced Issuer)
    kind: Issuer
    # This is optional since cert-manager will default to this value however
    # if you are using an external issuer, change this to that issuer group.
    group: cert-manager.io
---
# Source: pulsar/templates/tls/tls-certs-internal.yaml
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: "zxc-pulsar-tls-bookie"
  namespace: default
spec:
  # Secret names are always required.
  secretName: "zxc-tls-bookie"
  duration: "2160h"
  renewBefore: "360h"
  organization:
  - pulsar
  # The use of the common name field has been deprecated since 2000 and is
  # discouraged from being used.
  commonName: "zxc-pulsar-bookie"
  isCA: false
  keySize: 4096
  keyAlgorithm: rsa
  keyEncoding: pkcs8
  usages:
    - server auth
    - client auth
  dnsNames:
    -  "*.zxc-pulsar-bookie.default.svc.cluster.local"
    -  "zxc-pulsar-bookie"
  # Issuer references are always required.
  issuerRef:
    name: "zxc-pulsar-internal-cert-issuer-ca-issuer"
    # We can reference ClusterIssuers by changing the kind here.
    # The default value is Issuer (i.e. a locally namespaced Issuer)
    kind: Issuer
    # This is optional since cert-manager will default to this value however
    # if you are using an external issuer, change this to that issuer group.
    group: cert-manager.io
---
# Source: pulsar/templates/tls/tls-certs-internal.yaml
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: "zxc-pulsar-tls-recovery"
  namespace: default
spec:
  # Secret names are always required.
  secretName: "zxc-tls-recovery"
  duration: "2160h"
  renewBefore: "360h"
  organization:
  - pulsar
  # The use of the common name field has been deprecated since 2000 and is
  # discouraged from being used.
  commonName: "zxc-pulsar-recovery"
  isCA: false
  keySize: 4096
  keyAlgorithm: rsa
  keyEncoding: pkcs8
  usages:
    - server auth
    - client auth
  dnsNames:
    -  "*.zxc-pulsar-recovery.default.svc.cluster.local"
    -  "zxc-pulsar-recovery"
  # Issuer references are always required.
  issuerRef:
    name: "zxc-pulsar-internal-cert-issuer-ca-issuer"
    # We can reference ClusterIssuers by changing the kind here.
    # The default value is Issuer (i.e. a locally namespaced Issuer)
    kind: Issuer
    # This is optional since cert-manager will default to this value however
    # if you are using an external issuer, change this to that issuer group.
    group: cert-manager.io
---
# Source: pulsar/templates/tls/tls-certs-internal.yaml
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: "zxc-pulsar-tls-zookeeper"
  namespace: default
spec:
  # Secret names are always required.
  secretName: "zxc-tls-zookeeper"
  duration: "2160h"
  renewBefore: "360h"
  organization:
  - pulsar
  # The use of the common name field has been deprecated since 2000 and is
  # discouraged from being used.
  commonName: "zxc-pulsar-zookeeper"
  isCA: false
  keySize: 4096
  keyAlgorithm: rsa
  keyEncoding: pkcs8
  usages:
    - server auth
    - client auth
  dnsNames:
    -  "*.zxc-pulsar-zookeeper.default.svc.cluster.local"
    -  "zxc-pulsar-zookeeper"
  # Issuer references are always required.
  issuerRef:
    name: "zxc-pulsar-internal-cert-issuer-ca-issuer"
    # We can reference ClusterIssuers by changing the kind here.
    # The default value is Issuer (i.e. a locally namespaced Issuer)
    kind: Issuer
    # This is optional since cert-manager will default to this value however
    # if you are using an external issuer, change this to that issuer group.
    group: cert-manager.io
---
# Source: pulsar/templates/tls/tls-certs-internal.yaml
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: "zxc-pulsar-tls-toolset"
  namespace: default
spec:
  # Secret names are always required.
  secretName: "zxc-tls-toolset"
  duration: "2160h"
  renewBefore: "360h"
  organization:
  - pulsar
  # The use of the common name field has been deprecated since 2000 and is
  # discouraged from being used.
  commonName: "zxc-pulsar-toolset"
  isCA: false
  keySize: 4096
  keyAlgorithm: rsa
  keyEncoding: pkcs8
  usages:
    - server auth
    - client auth
  dnsNames:
    -  "*.zxc-pulsar-toolset.default.svc.cluster.local"
    -  "zxc-pulsar-toolset"
  # Issuer references are always required.
  issuerRef:
    name: "zxc-pulsar-internal-cert-issuer-ca-issuer"
    # We can reference ClusterIssuers by changing the kind here.
    # The default value is Issuer (i.e. a locally namespaced Issuer)
    kind: Issuer
    # This is optional since cert-manager will default to this value however
    # if you are using an external issuer, change this to that issuer group.
    group: cert-manager.io
---
# Source: pulsar/templates/tls/tls-cert-internal-issuer.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
apiVersion: cert-manager.io/v1alpha2
kind: Issuer
metadata:
  name: "zxc-pulsar-internal-cert-issuer"
  namespace: default
spec:
  selfSigned: {}
---
# Source: pulsar/templates/tls/tls-cert-internal-issuer.yaml
apiVersion: cert-manager.io/v1alpha2
kind: Issuer
metadata:
  name: "zxc-pulsar-internal-cert-issuer-ca-issuer"
  namespace: default
spec:
  ca:
    secretName: "zxc-ca-tls"
---
# Source: pulsar/charts/loki-stack/charts/grafana/templates/tests/test.yaml
apiVersion: v1
kind: Pod
metadata:
  name: zxc-grafana-test
  labels:
    app: zxc-grafana
    chart: "grafana-3.8.19"
    heritage: "Helm"
    release: "zxc"
  annotations:
    "helm.sh/hook": test-success
  namespace: default
spec:
  serviceAccountName: zxc-grafana-test
  initContainers:
    - name: test-framework
      image: "dduportal/bats:0.4.0"
      command:
      - "bash"
      - "-c"
      - |
        set -ex
        # copy bats to tools dir
        cp -R /usr/local/libexec/ /tools/bats/
      volumeMounts:
      - mountPath: /tools
        name: tools
  containers:
    - name: zxc-test
      image: "dduportal/bats:0.4.0"
      command: ["/tools/bats/bats", "-t", "/tests/run.sh"]
      volumeMounts:
        - mountPath: /tests
          name: tests
          readOnly: true
        - mountPath: /tools
          name: tools
  volumes:
  - name: tests
    configMap:
      name: zxc-grafana-test
  - name: tools
    emptyDir: {}
  restartPolicy: Never
---
# Source: pulsar/charts/loki-stack/templates/tests/loki-test-pod.yaml
apiVersion: v1
kind: Pod
metadata:
  annotations:
    "helm.sh/hook": test-success
  labels:
    app: loki-stack
    chart: loki-stack-0.36.1
    release: zxc
    heritage: Helm
  name: zxc-loki-stack-test
spec:
  containers:
  - name: test
    image: bats/bats:v1.1.0
    args:
    - /var/lib/loki/test.sh
    env:
    - name: LOKI_SERVICE
      value: zxc-loki
    - name: LOKI_PORT
      value: "3100"
    volumeMounts:
    - name: tests
      mountPath: /var/lib/loki
  restartPolicy: Never
  volumes:
  - name: tests
    configMap:
      name: zxc-loki-stack-test
---
# Source: pulsar/charts/superset/templates/init-job.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
apiVersion: batch/v1
kind: Job
metadata:
  name: superset-init-db
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": "before-hook-creation"
spec:
  template:
    metadata:
      name: superset-init-db
    spec:
      securityContext:
        runAsUser: 0
      initContainers:
      - command:
        - /bin/sh
        - -c
        - until nc -zv $DB_HOST $DB_PORT -w1; do echo 'waiting for db'; sleep 1; done
        envFrom:
        - secretRef:
            name: 'zxc-superset-env'
        image: busybox:latest
        imagePullPolicy: IfNotPresent
        name: wait-for-postgres
      containers:
      - name: superset-init-db
        image: "apache/superset:latest"
        
        envFrom:
          - secretRef:
              name: zxc-superset-env
        imagePullPolicy: IfNotPresent
        volumeMounts:
          - name: superset-config
            mountPath: "/app/pythonpath"
            readOnly: true
        
        command: ["/bin/sh","-c",". /app/pythonpath/superset_bootstrap.sh; . /app/pythonpath/superset_init.sh"]
        resources:
          {}
      volumes:
        - name: superset-config
          secret:
            secretName: zxc-superset-config
      restartPolicy: Never
